window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"test": {"fullname": "test", "modulename": "test", "type": "module", "doc": "<p></p>\n"}, "test.support": {"fullname": "test.support", "modulename": "test.support", "type": "module", "doc": "<p>Supporting definitions for the Python regression tests.</p>\n"}, "test.support.PIPE_MAX_SIZE": {"fullname": "test.support.PIPE_MAX_SIZE", "modulename": "test.support", "qualname": "PIPE_MAX_SIZE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 4194305"}, "test.support.verbose": {"fullname": "test.support.verbose", "modulename": "test.support", "qualname": "verbose", "type": "variable", "doc": "<p></p>\n", "default_value": " = 1"}, "test.support.max_memuse": {"fullname": "test.support.max_memuse", "modulename": "test.support", "qualname": "max_memuse", "type": "variable", "doc": "<p></p>\n", "default_value": " = 0"}, "test.support.use_resources": {"fullname": "test.support.use_resources", "modulename": "test.support", "qualname": "use_resources", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.support.failfast": {"fullname": "test.support.failfast", "modulename": "test.support", "qualname": "failfast", "type": "variable", "doc": "<p></p>\n", "default_value": " = False"}, "test.support.Error": {"fullname": "test.support.Error", "modulename": "test.support", "qualname": "Error", "type": "class", "doc": "<p>Base class for regression test exceptions.</p>\n", "bases": "builtins.Exception"}, "test.support.TestFailed": {"fullname": "test.support.TestFailed", "modulename": "test.support", "qualname": "TestFailed", "type": "class", "doc": "<p>Test failed.</p>\n", "bases": "Error"}, "test.support.TestDidNotRun": {"fullname": "test.support.TestDidNotRun", "modulename": "test.support", "qualname": "TestDidNotRun", "type": "class", "doc": "<p>Test did not run any subtests.</p>\n", "bases": "Error"}, "test.support.ResourceDenied": {"fullname": "test.support.ResourceDenied", "modulename": "test.support", "qualname": "ResourceDenied", "type": "class", "doc": "<p>Test skipped because it requested a disallowed resource.</p>\n\n<p>This is raised when a test calls requires() for a resource that\nhas not be enabled.  It is used to distinguish between expected\nand unexpected skips.</p>\n", "bases": "unittest.case.SkipTest"}, "test.support.import_module": {"fullname": "test.support.import_module", "modulename": "test.support", "qualname": "import_module", "type": "function", "doc": "<p>Import and return the module to be tested, raising SkipTest if\nit is not available.</p>\n\n<p>If deprecated is True, any module or package deprecation messages\nwill be suppressed. If a module is required on a platform but optional for\nothers, set required_on to an iterable of platform prefixes which will be\ncompared against sys.platform.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">deprecated</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">required_on</span><span class=\"o\">=</span><span class=\"p\">()</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.import_fresh_module": {"fullname": "test.support.import_fresh_module", "modulename": "test.support", "qualname": "import_fresh_module", "type": "function", "doc": "<p>Import and return a module, deliberately bypassing sys.modules.</p>\n\n<p>This function imports and returns a fresh copy of the named Python module\nby removing the named module from sys.modules before doing the import.\nNote that unlike reload, the original module is not affected by\nthis operation.</p>\n\n<p><em>fresh</em> is an iterable of additional module names that are also removed\nfrom the sys.modules cache before doing the import.</p>\n\n<p><em>blocked</em> is an iterable of module names that are replaced with None\nin the module cache during the import to ensure that attempts to import\nthem raise ImportError.</p>\n\n<p>The named module and any modules named in the <em>fresh</em> and <em>blocked</em>\nparameters are saved before starting the import and then reinserted into\nsys.modules when the fresh import is complete.</p>\n\n<p>Module and package deprecation messages are suppressed during this import\nif <em>deprecated</em> is True.</p>\n\n<p>This function will raise ImportError if the named module cannot be\nimported.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">fresh</span><span class=\"o\">=</span><span class=\"p\">()</span>, </span><span class=\"param\"><span class=\"n\">blocked</span><span class=\"o\">=</span><span class=\"p\">()</span>, </span><span class=\"param\"><span class=\"n\">deprecated</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.CleanImport": {"fullname": "test.support.CleanImport", "modulename": "test.support", "qualname": "CleanImport", "type": "class", "doc": "<p>Context manager to force import to return a new module reference.</p>\n\n<p>This is useful for testing module-level behaviours, such as\nthe emission of a DeprecationWarning on import.</p>\n\n<p>Use like this:</p>\n\n<pre><code>with CleanImport(\"foo\"):\n    importlib.import_module(\"foo\") # new reference\n</code></pre>\n"}, "test.support.CleanImport.__init__": {"fullname": "test.support.CleanImport.__init__", "modulename": "test.support", "qualname": "CleanImport.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">module_names</span></span>)</span>"}, "test.support.unload": {"fullname": "test.support.unload", "modulename": "test.support", "qualname": "unload", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.forget": {"fullname": "test.support.forget", "modulename": "test.support", "qualname": "forget", "type": "function", "doc": "<p>'Forget' a module was ever imported.</p>\n\n<p>This removes the module from sys.modules and deletes any PEP 3147/488 or\nlegacy .pyc files.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">modname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.record_original_stdout": {"fullname": "test.support.record_original_stdout", "modulename": "test.support", "qualname": "record_original_stdout", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stdout</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.get_original_stdout": {"fullname": "test.support.get_original_stdout", "modulename": "test.support", "qualname": "get_original_stdout", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.captured_stdout": {"fullname": "test.support.captured_stdout", "modulename": "test.support", "qualname": "captured_stdout", "type": "function", "doc": "<p>Capture the output of sys.stdout:</p>\n\n<p>with captured_stdout() as stdout:\n    print(\"hello\")\nself.assertEqual(stdout.getvalue(), \"hello\\n\")</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.captured_stdin": {"fullname": "test.support.captured_stdin", "modulename": "test.support", "qualname": "captured_stdin", "type": "function", "doc": "<p>Capture the input to sys.stdin:</p>\n\n<p>with captured_stdin() as stdin:\n    stdin.write('hello\\n')\n    stdin.seek(0)\n    # call test code that consumes from sys.stdin\n    captured = input()\nself.assertEqual(captured, \"hello\")</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.captured_stderr": {"fullname": "test.support.captured_stderr", "modulename": "test.support", "qualname": "captured_stderr", "type": "function", "doc": "<p>Capture the output of sys.stderr:</p>\n\n<p>with captured_stderr() as stderr:\n    print(\"hello\", file=sys.stderr)\nself.assertEqual(stderr.getvalue(), \"hello\\n\")</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.TESTFN": {"fullname": "test.support.TESTFN", "modulename": "test.support", "qualname": "TESTFN", "type": "variable", "doc": "<p></p>\n", "default_value": " = &#x27;@test_22830_tmp&#x27;"}, "test.support.SAVEDCWD": {"fullname": "test.support.SAVEDCWD", "modulename": "test.support", "qualname": "SAVEDCWD", "type": "variable", "doc": "<p></p>\n", "default_value": " = &#x27;/Users/ryanmertz/Desktop/CSC510/csc510-fall22-hw-g33&#x27;"}, "test.support.unlink": {"fullname": "test.support.unlink", "modulename": "test.support", "qualname": "unlink", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.rmtree": {"fullname": "test.support.rmtree", "modulename": "test.support", "qualname": "rmtree", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.temp_cwd": {"fullname": "test.support.temp_cwd", "modulename": "test.support", "qualname": "temp_cwd", "type": "function", "doc": "<p>Context manager that temporarily creates and changes the CWD.</p>\n\n<p>The function temporarily changes the current working directory\nafter creating a temporary directory in the current directory with\nname <em>name</em>.  If <em>name</em> is None, the temporary directory is\ncreated using tempfile.mkdtemp.</p>\n\n<p>If <em>quiet</em> is False (default) and it is not possible to\ncreate or change the CWD, an error is raised.  If <em>quiet</em> is True,\nonly a warning is raised and the original CWD is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;tempcwd&#39;</span>, </span><span class=\"param\"><span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.findfile": {"fullname": "test.support.findfile", "modulename": "test.support", "qualname": "findfile", "type": "function", "doc": "<p>Try to find a file on sys.path or in the test directory.  If it is not\nfound the argument passed to the function is returned (this does not\nnecessarily signal failure; could still be the legitimate path).</p>\n\n<p>Setting <em>subdir</em> indicates a relative path to use to find the file\nrather than looking directly in the path directories.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">subdir</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.create_empty_file": {"fullname": "test.support.create_empty_file", "modulename": "test.support", "qualname": "create_empty_file", "type": "function", "doc": "<p>Create an empty file. If the file already exists, truncate it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.can_symlink": {"fullname": "test.support.can_symlink", "modulename": "test.support", "qualname": "can_symlink", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.fs_is_case_insensitive": {"fullname": "test.support.fs_is_case_insensitive", "modulename": "test.support", "qualname": "fs_is_case_insensitive", "type": "function", "doc": "<p>Detects if the file system for the specified directory is case-insensitive.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.is_resource_enabled": {"fullname": "test.support.is_resource_enabled", "modulename": "test.support", "qualname": "is_resource_enabled", "type": "function", "doc": "<p>Test whether a resource is enabled.</p>\n\n<p>Known resources are set by regrtest.py.  If not running under regrtest.py,\nall resources are assumed enabled unless use_resources has been set.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resource</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires": {"fullname": "test.support.requires", "modulename": "test.support", "qualname": "requires", "type": "function", "doc": "<p>Raise ResourceDenied if the specified resource is not available.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resource</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_freebsd_version": {"fullname": "test.support.requires_freebsd_version", "modulename": "test.support", "qualname": "requires_freebsd_version", "type": "function", "doc": "<p>Decorator raising SkipTest if the OS is FreeBSD and the FreeBSD version is\nless than <code>min_version</code>.</p>\n\n<p>For example, @requires_freebsd_version(7, 2) raises SkipTest if the FreeBSD\nversion is less than 7.2.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">min_version</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_linux_version": {"fullname": "test.support.requires_linux_version", "modulename": "test.support", "qualname": "requires_linux_version", "type": "function", "doc": "<p>Decorator raising SkipTest if the OS is Linux and the Linux version is\nless than <code>min_version</code>.</p>\n\n<p>For example, @requires_linux_version(2, 6, 32) raises SkipTest if the Linux\nversion is less than 2.6.32.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">min_version</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_mac_ver": {"fullname": "test.support.requires_mac_ver", "modulename": "test.support", "qualname": "requires_mac_ver", "type": "function", "doc": "<p>Decorator raising SkipTest if the OS is Mac OS X and the OS X\nversion if less than min_version.</p>\n\n<p>For example, @requires_mac_ver(10, 5) raises SkipTest if the OS X version\nis lesser than 10.5.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">min_version</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_hashdigest": {"fullname": "test.support.requires_hashdigest", "modulename": "test.support", "qualname": "requires_hashdigest", "type": "function", "doc": "<p>Decorator raising SkipTest if a hashing algorithm is not available</p>\n\n<p>The hashing algorithm could be missing or blocked by a strict crypto\npolicy.</p>\n\n<p>If 'openssl' is True, then the decorator checks that OpenSSL provides\nthe algorithm. Otherwise the check falls back to built-in\nimplementations.</p>\n\n<p>ValueError: [digital envelope routines: EVP_DigestInit_ex] disabled for FIPS\nValueError: unsupported hash type md4</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">digestname</span>, </span><span class=\"param\"><span class=\"n\">openssl</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check_syntax_error": {"fullname": "test.support.check_syntax_error", "modulename": "test.support", "qualname": "check_syntax_error", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">testcase</span>, </span><span class=\"param\"><span class=\"n\">statement</span>, </span><span class=\"param\"><span class=\"n\">errtext</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">lineno</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check_syntax_warning": {"fullname": "test.support.check_syntax_warning", "modulename": "test.support", "qualname": "check_syntax_warning", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">testcase</span>, </span><span class=\"param\"><span class=\"n\">statement</span>, </span><span class=\"param\"><span class=\"n\">errtext</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">lineno</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.TransientResource": {"fullname": "test.support.TransientResource", "modulename": "test.support", "qualname": "TransientResource", "type": "class", "doc": "<p>Raise ResourceDenied if an exception is raised while the context manager\nis in effect that matches the specified exception and attributes.</p>\n"}, "test.support.TransientResource.__init__": {"fullname": "test.support.TransientResource.__init__", "modulename": "test.support", "qualname": "TransientResource.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">exc</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "test.support.time_out": {"fullname": "test.support.time_out", "modulename": "test.support", "qualname": "time_out", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support.TransientResource object&gt;"}, "test.support.socket_peer_reset": {"fullname": "test.support.socket_peer_reset", "modulename": "test.support", "qualname": "socket_peer_reset", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support.TransientResource object&gt;"}, "test.support.ioerror_peer_reset": {"fullname": "test.support.ioerror_peer_reset", "modulename": "test.support", "qualname": "ioerror_peer_reset", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support.TransientResource object&gt;"}, "test.support.transient_internet": {"fullname": "test.support.transient_internet", "modulename": "test.support", "qualname": "transient_internet", "type": "function", "doc": "<p>Return a context manager that raises ResourceDenied when various issues\nwith the Internet connection manifest themselves as exceptions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resource_name</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">30.0</span>, </span><span class=\"param\"><span class=\"n\">errnos</span><span class=\"o\">=</span><span class=\"p\">()</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.BasicTestRunner": {"fullname": "test.support.BasicTestRunner", "modulename": "test.support", "qualname": "BasicTestRunner", "type": "class", "doc": "<p></p>\n"}, "test.support.BasicTestRunner.__init__": {"fullname": "test.support.BasicTestRunner.__init__", "modulename": "test.support", "qualname": "BasicTestRunner.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.support.BasicTestRunner.run": {"fullname": "test.support.BasicTestRunner.run", "modulename": "test.support", "qualname": "BasicTestRunner.run", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.run_unittest": {"fullname": "test.support.run_unittest", "modulename": "test.support", "qualname": "run_unittest", "type": "function", "doc": "<p>Run tests from unittest.TestCase-derived classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">classes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.run_doctest": {"fullname": "test.support.run_doctest", "modulename": "test.support", "qualname": "run_doctest", "type": "function", "doc": "<p>Run doctest on the given module.  Return (#failures, #tests).</p>\n\n<p>If optional argument verbosity is not specified (or is None), pass\nsupport's belief about verbosity on to doctest.  Else doctest's\nusual behavior is used (it searches sys.argv for -v).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span>, </span><span class=\"param\"><span class=\"n\">verbosity</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">optionflags</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.skip_unless_symlink": {"fullname": "test.support.skip_unless_symlink", "modulename": "test.support", "qualname": "skip_unless_symlink", "type": "function", "doc": "<p>Skip decorator for tests that require functional symlink</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_gzip": {"fullname": "test.support.requires_gzip", "modulename": "test.support", "qualname": "requires_gzip", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_bz2": {"fullname": "test.support.requires_bz2", "modulename": "test.support", "qualname": "requires_bz2", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_lzma": {"fullname": "test.support.requires_lzma", "modulename": "test.support", "qualname": "requires_lzma", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.bigmemtest": {"fullname": "test.support.bigmemtest", "modulename": "test.support", "qualname": "bigmemtest", "type": "function", "doc": "<p>Decorator for bigmem tests.</p>\n\n<p>'size' is a requested size for the test (in arbitrary, test-interpreted\nunits.) 'memuse' is the number of bytes per unit for the test, or a good\nestimate of it. For example, a test that needs two byte buffers, of 4 GiB\neach, could be decorated with @bigmemtest(size=_4G, memuse=2).</p>\n\n<p>The 'size' argument is normally passed to the decorated test method as an\nextra argument. If 'dry_run' is true, the value passed to the test method\nmay be less than the requested value. If 'dry_run' is false, it means the\ntest doesn't support dummy runs when -M is not specified.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span>, </span><span class=\"param\"><span class=\"n\">memuse</span>, </span><span class=\"param\"><span class=\"n\">dry_run</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.bigaddrspacetest": {"fullname": "test.support.bigaddrspacetest", "modulename": "test.support", "qualname": "bigaddrspacetest", "type": "function", "doc": "<p>Decorator for tests that fill the address space.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.cpython_only": {"fullname": "test.support.cpython_only", "modulename": "test.support", "qualname": "cpython_only", "type": "function", "doc": "<p>Decorator for tests only applicable on CPython.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.get_attribute": {"fullname": "test.support.get_attribute", "modulename": "test.support", "qualname": "get_attribute", "type": "function", "doc": "<p>Get an attribute, raising SkipTest if AttributeError is raised.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_IEEE_754": {"fullname": "test.support.requires_IEEE_754", "modulename": "test.support", "qualname": "requires_IEEE_754", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.skip_unless_xattr": {"fullname": "test.support.skip_unless_xattr", "modulename": "test.support", "qualname": "skip_unless_xattr", "type": "function", "doc": "<p>Skip decorator for tests that require functional extended attributes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.requires_zlib": {"fullname": "test.support.requires_zlib", "modulename": "test.support", "qualname": "requires_zlib", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.anticipate_failure": {"fullname": "test.support.anticipate_failure", "modulename": "test.support", "qualname": "anticipate_failure", "type": "function", "doc": "<p>Decorator to mark a test that is known to be broken in some cases</p>\n\n<p>Any use of this decorator should have a comment identifying the\nassociated tracker issue.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">condition</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.load_package_tests": {"fullname": "test.support.load_package_tests", "modulename": "test.support", "qualname": "load_package_tests", "type": "function", "doc": "<p>Generic load_tests implementation for simple test packages.</p>\n\n<p>Most packages can implement load_tests using this function as follows:</p>\n\n<p>def load_tests(*args):\n       return load_package_tests(os.path.dirname(__file__), *args)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pkg_dir</span>, </span><span class=\"param\"><span class=\"n\">loader</span>, </span><span class=\"param\"><span class=\"n\">standard_tests</span>, </span><span class=\"param\"><span class=\"n\">pattern</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.detect_api_mismatch": {"fullname": "test.support.detect_api_mismatch", "modulename": "test.support", "qualname": "detect_api_mismatch", "type": "function", "doc": "<p>Returns the set of items in ref_api not in other_api, except for a\ndefined list of items to be ignored in this check.</p>\n\n<p>By default this skips private attributes beginning with '_' but\nincludes all magic methods, i.e. those starting and ending in '__'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ref_api</span>, </span><span class=\"param\"><span class=\"n\">other_api</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">ignore</span><span class=\"o\">=</span><span class=\"p\">()</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check__all__": {"fullname": "test.support.check__all__", "modulename": "test.support", "qualname": "check__all__", "type": "function", "doc": "<p>Assert that the __all__ variable of 'module' contains all public names.</p>\n\n<p>The module's public names (its API) are detected automatically based on\nwhether they match the public name convention and were defined in\n'module'.</p>\n\n<p>The 'name_of_module' argument can specify (as a string or tuple thereof)\nwhat module(s) an API could be defined in in order to be detected as a\npublic API. One case for this is when 'module' imports part of its public\nAPI from other modules, possibly a C backend (like 'csv' and its '_csv').</p>\n\n<p>The 'extra' argument can be a set of names that wouldn't otherwise be\nautomatically detected as \"public\", like objects without a proper\n'__module__' attribute. If provided, it will be added to the\nautomatically detected ones.</p>\n\n<p>The 'blacklist' argument can be a set of names that must not be treated\nas part of the public API even though their names indicate otherwise.</p>\n\n<p>Usage:\n    import bar\n    import foo\n    import unittest\n    from test import support</p>\n\n<pre><code>class MiscTestCase(unittest.TestCase):\n    def test__all__(self):\n        support.check__all__(self, foo)\n\nclass OtherTestCase(unittest.TestCase):\n    def test__all__(self):\n        extra = {'BAR_CONST', 'FOO_CONST'}\n        blacklist = {'baz'}  # Undocumented name.\n        # bar imports part of its API from _bar.\n        support.check__all__(self, bar, ('bar', '_bar'),\n                             extra=extra, blacklist=blacklist)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test_case</span>, </span><span class=\"param\"><span class=\"n\">module</span>, </span><span class=\"param\"><span class=\"n\">name_of_module</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">()</span>, </span><span class=\"param\"><span class=\"n\">blacklist</span><span class=\"o\">=</span><span class=\"p\">()</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.skip_unless_bind_unix_socket": {"fullname": "test.support.skip_unless_bind_unix_socket", "modulename": "test.support", "qualname": "skip_unless_bind_unix_socket", "type": "function", "doc": "<p>Decorator for tests requiring a functional bind() for unix sockets.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.skip_if_buggy_ucrt_strfptime": {"fullname": "test.support.skip_if_buggy_ucrt_strfptime", "modulename": "test.support", "qualname": "skip_if_buggy_ucrt_strfptime", "type": "function", "doc": "<p>Skip decorator for tests that use buggy strptime/strftime</p>\n\n<p>If the UCRT bugs are present time.localtime().tm_zone will be\nan empty string, otherwise we assume the UCRT bugs are fixed</p>\n\n<p>See bpo-37552 [Windows] strptime/strftime return invalid\nresults with UCRT version 17763.615</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.ignore_warnings": {"fullname": "test.support.ignore_warnings", "modulename": "test.support", "qualname": "ignore_warnings", "type": "function", "doc": "<p>Decorator to suppress deprecation warnings.</p>\n\n<p>Use of context managers to hide warnings make diffs\nmore noisy and tools like 'git blame' less useful.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">category</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.is_jython": {"fullname": "test.support.is_jython", "modulename": "test.support", "qualname": "is_jython", "type": "variable", "doc": "<p></p>\n", "default_value": " = False"}, "test.support.is_android": {"fullname": "test.support.is_android", "modulename": "test.support", "qualname": "is_android", "type": "variable", "doc": "<p></p>\n", "default_value": " = False"}, "test.support.check_impl_detail": {"fullname": "test.support.check_impl_detail", "modulename": "test.support", "qualname": "check_impl_detail", "type": "function", "doc": "<p>This function returns True or False depending on the host platform.\nExamples:\n   if check_impl_detail():               # only on CPython (default)\n   if check_impl_detail(jython=True):    # only on Jython\n   if check_impl_detail(cpython=False):  # everywhere except on CPython</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">guards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.unix_shell": {"fullname": "test.support.unix_shell", "modulename": "test.support", "qualname": "unix_shell", "type": "variable", "doc": "<p></p>\n", "default_value": " = &#x27;/bin/sh&#x27;"}, "test.support.setswitchinterval": {"fullname": "test.support.setswitchinterval", "modulename": "test.support", "qualname": "setswitchinterval", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">interval</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.HOST": {"fullname": "test.support.HOST", "modulename": "test.support", "qualname": "HOST", "type": "variable", "doc": "<p></p>\n", "default_value": " = &#x27;localhost&#x27;"}, "test.support.IPV6_ENABLED": {"fullname": "test.support.IPV6_ENABLED", "modulename": "test.support", "qualname": "IPV6_ENABLED", "type": "variable", "doc": "<p></p>\n", "default_value": " = True"}, "test.support.find_unused_port": {"fullname": "test.support.find_unused_port", "modulename": "test.support", "qualname": "find_unused_port", "type": "function", "doc": "<p>Returns an unused port that should be suitable for binding.  This is\nachieved by creating a temporary socket with the same family and type as\nthe 'sock' parameter (default is AF_INET, SOCK_STREAM), and binding it to\nthe specified host address (defaults to 0.0.0.0) with the port set to 0,\neliciting an unused ephemeral port from the OS.  The temporary socket is\nthen closed and deleted, and the ephemeral port is returned.</p>\n\n<p>Either this method or bind_port() should be used for any tests where a\nserver socket needs to be bound to a particular port for the duration of\nthe test.  Which one to use depends on whether the calling code is creating\na python socket, or if an unused port needs to be provided in a constructor\nor passed to an external program (i.e. the -accept argument to openssl's\ns_server mode).  Always prefer bind_port() over find_unused_port() where\npossible.  Hard coded ports should <em>NEVER</em> be used.  As soon as a server\nsocket is bound to a hard coded port, the ability to run multiple instances\nof the test simultaneously on the same host is compromised, which makes the\ntest a ticking time bomb in a buildbot environment. On Unix buildbots, this\nmay simply manifest as a failed test, which can be recovered from without\nintervention in most cases, but on Windows, the entire python process can\ncompletely and utterly wedge, requiring someone to log in to the buildbot\nand manually kill the affected process.</p>\n\n<p>(This is easy to reproduce on Windows, unfortunately, and can be traced to\nthe SO_REUSEADDR socket option having different semantics on Windows versus\nUnix/Linux.  On Unix, you can't have two AF_INET SOCK_STREAM sockets bind,\nlisten and then accept connections on identical host/ports.  An EADDRINUSE\nOSError will be raised at some point (depending on the platform and\nthe order bind and listen were called on each socket).</p>\n\n<p>However, on Windows, if SO_REUSEADDR is set on the sockets, no EADDRINUSE\nwill ever be raised when attempting to bind two identical host/ports. When\naccept() is called on each socket, the second caller's process will steal\nthe port from the first caller, leaving them both in an awkwardly wedged\nstate where they'll no longer respond to any signals or graceful kills, and\nmust be forcibly killed via OpenProcess()/TerminateProcess().</p>\n\n<p>The solution on Windows is to use the SO_EXCLUSIVEADDRUSE socket option\ninstead of SO_REUSEADDR, which effectively affords the same semantics as\nSO_REUSEADDR on Unix.  Given the propensity of Unix developers in the Open\nSource world compared to Windows ones, this is a common mistake.  A quick\nlook over OpenSSL's 0.9.8g source shows that they use SO_REUSEADDR when\nopenssl.exe is called with the 's_server' option, for example. See\n<a href=\"http://bugs.python.org/issue2550\">http://bugs.python.org/issue2550</a> for more info.  The following site also\nhas a very thorough description about the implications of both REUSEADDR\nand EXCLUSIVEADDRUSE on Windows:\n<a href=\"http://msdn2.microsoft.com/en-us/library/ms740621(VS.85).aspx\">http://msdn2.microsoft.com/en-us/library/ms740621(VS.85).aspx</a>)</p>\n\n<p>XXX: although this approach is a vast improvement on previous attempts to\nelicit unused ports, it rests heavily on the assumption that the ephemeral\nport returned to us by the OS won't immediately be dished back out to some\nother process when we close and delete our temporary socket but before our\ncalling code has a chance to bind the returned port.  We can deal with this\nissue if/when we come across it.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">family</span><span class=\"o\">=&lt;</span><span class=\"n\">AddressFamily</span><span class=\"o\">.</span><span class=\"n\">AF_INET</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">socktype</span><span class=\"o\">=&lt;</span><span class=\"n\">SocketKind</span><span class=\"o\">.</span><span class=\"n\">SOCK_STREAM</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.bind_port": {"fullname": "test.support.bind_port", "modulename": "test.support", "qualname": "bind_port", "type": "function", "doc": "<p>Bind the socket to a free port and return the port number.  Relies on\nephemeral ports in order to ensure we are using an unbound port.  This is\nimportant as many tests may be running simultaneously, especially in a\nbuildbot environment.  This method raises an exception if the sock.family\nis AF_INET and sock.type is SOCK_STREAM, <em>and</em> the socket has SO_REUSEADDR\nor SO_REUSEPORT set on it.  Tests should <em>never</em> set these socket options\nfor TCP/IP sockets.  The only case for setting these options is testing\nmulticasting via multiple UDP sockets.</p>\n\n<p>Additionally, if the SO_EXCLUSIVEADDRUSE socket option is available (i.e.\non Windows), it will be set on the socket.  This will prevent anyone else\nfrom bind()'ing to our host/port for the duration of the test.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sock</span>, </span><span class=\"param\"><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">&#39;localhost&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.open_urlresource": {"fullname": "test.support.open_urlresource", "modulename": "test.support", "qualname": "open_urlresource", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.bind_unix_socket": {"fullname": "test.support.bind_unix_socket", "modulename": "test.support", "qualname": "bind_unix_socket", "type": "function", "doc": "<p>Bind a unix socket, raising SkipTest if PermissionError is raised.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sock</span>, </span><span class=\"param\"><span class=\"n\">addr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.temp_umask": {"fullname": "test.support.temp_umask", "modulename": "test.support", "qualname": "temp_umask", "type": "function", "doc": "<p>Context manager that temporarily sets the process umask.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">umask</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.reap_children": {"fullname": "test.support.reap_children", "modulename": "test.support", "qualname": "reap_children", "type": "function", "doc": "<p>Use this function at the end of test_main() whenever sub-processes\nare started.  This will help ensure that no extra children (zombies)\nstick around to hog resources and create problems when looking\nfor refleaks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.TestHandler": {"fullname": "test.support.TestHandler", "modulename": "test.support", "qualname": "TestHandler", "type": "class", "doc": "<p>A handler class which buffers logging records in memory. Whenever each\nrecord is added to the buffer, a check is made to see if the buffer should\nbe flushed. If it should, then flush() is expected to do what's needed.</p>\n", "bases": "logging.handlers.BufferingHandler"}, "test.support.TestHandler.__init__": {"fullname": "test.support.TestHandler.__init__", "modulename": "test.support", "qualname": "TestHandler.__init__", "type": "function", "doc": "<p>Initialize the handler with the buffer size.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">matcher</span></span>)</span>"}, "test.support.TestHandler.shouldFlush": {"fullname": "test.support.TestHandler.shouldFlush", "modulename": "test.support", "qualname": "TestHandler.shouldFlush", "type": "function", "doc": "<p>Should the handler flush its buffer?</p>\n\n<p>Returns true if the buffer is up to capacity. This method can be\noverridden to implement custom flushing strategies.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.TestHandler.emit": {"fullname": "test.support.TestHandler.emit", "modulename": "test.support", "qualname": "TestHandler.emit", "type": "function", "doc": "<p>Emit a record.</p>\n\n<p>Append the record. If shouldFlush() tells us to, call flush() to process\nthe buffer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.TestHandler.matches": {"fullname": "test.support.TestHandler.matches", "modulename": "test.support", "qualname": "TestHandler.matches", "type": "function", "doc": "<p>Look for a saved dict whose keys/values match the supplied arguments.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.threading_setup": {"fullname": "test.support.threading_setup", "modulename": "test.support", "qualname": "threading_setup", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.threading_cleanup": {"fullname": "test.support.threading_cleanup", "modulename": "test.support", "qualname": "threading_cleanup", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">original_values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.reap_threads": {"fullname": "test.support.reap_threads", "modulename": "test.support", "qualname": "reap_threads", "type": "function", "doc": "<p>Use this function when threads are being used.  This will\nensure that the threads are cleaned up even when the test fails.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.start_threads": {"fullname": "test.support.start_threads", "modulename": "test.support", "qualname": "start_threads", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">threads</span>, </span><span class=\"param\"><span class=\"n\">unlock</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check_warnings": {"fullname": "test.support.check_warnings", "modulename": "test.support", "qualname": "check_warnings", "type": "function", "doc": "<p>Context manager to silence warnings.</p>\n\n<p>Accept 2-tuples as positional arguments:\n    (\"message regexp\", WarningCategory)</p>\n\n<p>Optional argument:</p>\n\n<ul>\n<li>if 'quiet' is True, it does not fail if a filter catches nothing\n(default True without argument,\n default False if some filters are defined)</li>\n</ul>\n\n<p>Without argument, it defaults to:\n    check_warnings((\"\", Warning), quiet=True)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">filters</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check_no_resource_warning": {"fullname": "test.support.check_no_resource_warning", "modulename": "test.support", "qualname": "check_no_resource_warning", "type": "function", "doc": "<p>Context manager to check that no ResourceWarning is emitted.</p>\n\n<p>Usage:</p>\n\n<pre><code>with check_no_resource_warning(self):\n    f = open(...)\n    ...\n    del f\n</code></pre>\n\n<p>You must remove the object which may emit ResourceWarning before\nthe end of the context manager.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">testcase</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.check_no_warnings": {"fullname": "test.support.check_no_warnings", "modulename": "test.support", "qualname": "check_no_warnings", "type": "function", "doc": "<p>Context manager to check that no warnings are emitted.</p>\n\n<p>This context manager enables a given warning within its scope\nand checks that no warnings are emitted even with that warning\nenabled.</p>\n\n<p>If force_gc is True, a garbage collection is attempted before checking\nfor warnings. This may help to catch warnings emitted when objects\nare deleted, such as ResourceWarning.</p>\n\n<p>Other keyword arguments are passed to warnings.filterwarnings().</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">testcase</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\">category=&lt;class &#x27;Warning&#x27;&gt;, </span><span class=\"param\"><span class=\"n\">force_gc</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.EnvironmentVarGuard": {"fullname": "test.support.EnvironmentVarGuard", "modulename": "test.support", "qualname": "EnvironmentVarGuard", "type": "class", "doc": "<p>Class to help protect the environment variable properly.  Can be used as\na context manager.</p>\n", "bases": "collections.abc.MutableMapping"}, "test.support.EnvironmentVarGuard.__init__": {"fullname": "test.support.EnvironmentVarGuard.__init__", "modulename": "test.support", "qualname": "EnvironmentVarGuard.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.support.EnvironmentVarGuard.keys": {"fullname": "test.support.EnvironmentVarGuard.keys", "modulename": "test.support", "qualname": "EnvironmentVarGuard.keys", "type": "function", "doc": "<p>D.keys() -> a set-like object providing a view on D's keys</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.EnvironmentVarGuard.set": {"fullname": "test.support.EnvironmentVarGuard.set", "modulename": "test.support", "qualname": "EnvironmentVarGuard.set", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">envvar</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.EnvironmentVarGuard.unset": {"fullname": "test.support.EnvironmentVarGuard.unset", "modulename": "test.support", "qualname": "EnvironmentVarGuard.unset", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">envvar</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.run_with_locale": {"fullname": "test.support.run_with_locale", "modulename": "test.support", "qualname": "run_with_locale", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">catstr</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">locales</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.swap_item": {"fullname": "test.support.swap_item", "modulename": "test.support", "qualname": "swap_item", "type": "function", "doc": "<p>Temporary swap out an item with a new object.</p>\n\n<p>Usage:\n    with swap_item(obj, \"item\", 5):\n        ...</p>\n\n<pre><code>This will set obj[\"item\"] to 5 for the duration of the with: block,\nrestoring the old value at the end of the block. If `item` doesn't\nexist on `obj`, it will be created and then deleted at the end of the\nblock.\n\nThe old value (or None if it doesn't exist) will be assigned to the\ntarget of the \"as\" clause, if there is one.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span>, </span><span class=\"param\"><span class=\"n\">item</span>, </span><span class=\"param\"><span class=\"n\">new_val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.swap_attr": {"fullname": "test.support.swap_attr", "modulename": "test.support", "qualname": "swap_attr", "type": "function", "doc": "<p>Temporary swap out an attribute with a new object.</p>\n\n<p>Usage:\n    with swap_attr(obj, \"attr\", 5):\n        ...</p>\n\n<pre><code>This will set obj.attr to 5 for the duration of the with: block,\nrestoring the old value at the end of the block. If `attr` doesn't\nexist on `obj`, it will be created and then deleted at the end of the\nblock.\n\nThe old value (or None if it doesn't exist) will be assigned to the\ntarget of the \"as\" clause, if there is one.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span>, </span><span class=\"param\"><span class=\"n\">attr</span>, </span><span class=\"param\"><span class=\"n\">new_val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.Matcher": {"fullname": "test.support.Matcher", "modulename": "test.support", "qualname": "Matcher", "type": "class", "doc": "<p></p>\n"}, "test.support.Matcher.__init__": {"fullname": "test.support.Matcher.__init__", "modulename": "test.support", "qualname": "Matcher.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.support.Matcher.matches": {"fullname": "test.support.Matcher.matches", "modulename": "test.support", "qualname": "Matcher.matches", "type": "function", "doc": "<p>Try to match a single dict with the supplied arguments.</p>\n\n<p>Keys whose values are strings and which are in self._partial_matches\nwill be checked for partial (i.e. substring) matches. You can extend\nthis scheme to (for example) do regular expression matching, etc.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.Matcher.match_value": {"fullname": "test.support.Matcher.match_value", "modulename": "test.support", "qualname": "Matcher.match_value", "type": "function", "doc": "<p>Try to match a single stored value (dv) with a supplied value (v).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">dv</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.set_memlimit": {"fullname": "test.support.set_memlimit", "modulename": "test.support", "qualname": "set_memlimit", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">limit</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.SuppressCrashReport": {"fullname": "test.support.SuppressCrashReport", "modulename": "test.support", "qualname": "SuppressCrashReport", "type": "class", "doc": "<p>Try to prevent a crash report from popping up.</p>\n\n<p>On Windows, don't display the Windows Error Reporting dialog.  On UNIX,\ndisable the creation of coredump file.</p>\n"}, "test.support.SuppressCrashReport.__init__": {"fullname": "test.support.SuppressCrashReport.__init__", "modulename": "test.support", "qualname": "SuppressCrashReport.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.support.SuppressCrashReport.old_value": {"fullname": "test.support.SuppressCrashReport.old_value", "modulename": "test.support", "qualname": "SuppressCrashReport.old_value", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.support.SuppressCrashReport.old_modes": {"fullname": "test.support.SuppressCrashReport.old_modes", "modulename": "test.support", "qualname": "SuppressCrashReport.old_modes", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.support.sortdict": {"fullname": "test.support.sortdict", "modulename": "test.support", "qualname": "sortdict", "type": "function", "doc": "<p>Like repr(dict), but in sorted order.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.run_with_tz": {"fullname": "test.support.run_with_tz", "modulename": "test.support", "qualname": "run_with_tz", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tz</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.PGO": {"fullname": "test.support.PGO", "modulename": "test.support", "qualname": "PGO", "type": "variable", "doc": "<p></p>\n", "default_value": " = False"}, "test.support.missing_compiler_executable": {"fullname": "test.support.missing_compiler_executable", "modulename": "test.support", "qualname": "missing_compiler_executable", "type": "function", "doc": "<p>Check if the compiler components used to build the interpreter exist.</p>\n\n<p>Check for the existence of the compiler executables whose names are listed\nin 'cmd_names' or all the compiler executables when 'cmd_names' is empty\nand return the first missing executable or None when none is found\nmissing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cmd_names</span><span class=\"o\">=</span><span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.fd_count": {"fullname": "test.support.fd_count", "modulename": "test.support", "qualname": "fd_count", "type": "function", "doc": "<p>Count the number of open file descriptors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.support.ALWAYS_EQ": {"fullname": "test.support.ALWAYS_EQ", "modulename": "test.support", "qualname": "ALWAYS_EQ", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support._ALWAYS_EQ object&gt;"}, "test.support.LARGEST": {"fullname": "test.support.LARGEST", "modulename": "test.support", "qualname": "LARGEST", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support._LARGEST object&gt;"}, "test.support.SMALLEST": {"fullname": "test.support.SMALLEST", "modulename": "test.support", "qualname": "SMALLEST", "type": "variable", "doc": "<p></p>\n", "default_value": " = &lt;test.support._SMALLEST object&gt;"}, "test.test_script_helper": {"fullname": "test.test_script_helper", "modulename": "test.test_script_helper", "type": "module", "doc": "<p>Unittests for test.support.script_helper.  Who tests the test helper?</p>\n"}, "test.test_script_helper.TestScriptHelper": {"fullname": "test.test_script_helper.TestScriptHelper", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper", "type": "class", "doc": "<p>A class whose instances are single test cases.</p>\n\n<p>By default, the test code itself should be placed in a method named\n'runTest'.</p>\n\n<p>If the fixture may be used for many test cases, create as\nmany test methods as are needed. When instantiating such a TestCase\nsubclass, specify in the constructor arguments the name of the test method\nthat the instance is to execute.</p>\n\n<p>Test authors should subclass TestCase for their own tests. Construction\nand deconstruction of the test's environment ('fixture') can be\nimplemented by overriding the 'setUp' and 'tearDown' methods respectively.</p>\n\n<p>If it is necessary to override the __init__ method, the base class\n__init__ method must always be called. It is important that subclasses\nshould not change the signature of their __init__ method, since instances\nof the classes are instantiated automatically by parts of the framework\nin order to be run.</p>\n\n<p>When subclassing TestCase, you can set these attributes:</p>\n\n<ul>\n<li>failureException: determines which exception will be raised when\nthe instance's assertion methods fail; test methods raising this\nexception will be deemed to have 'failed' rather than 'errored'.</li>\n<li>longMessage: determines whether long messages (including repr of\nobjects used in assert methods) will be printed on failure in <em>addition</em>\nto any explicit message passed.</li>\n<li>maxDiff: sets the maximum length of a diff in failure messages\nby assert methods using difflib. It is looked up as an instance\nattribute so can be configured by individual tests if required.</li>\n</ul>\n", "bases": "unittest.case.TestCase"}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_ok", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_ok", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_failure", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_failure", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_ok_raises", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_failure_raises", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_isolated_when_env_not_required", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_popen</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"fullname": "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required", "modulename": "test.test_script_helper", "qualname": "TestScriptHelper.test_assert_python_not_isolated_when_env_is_required", "type": "function", "doc": "<p>Ensure that -I is not passed when the environment is required.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_popen</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment", "type": "class", "doc": "<p>Code coverage for interpreter_requires_environment().</p>\n", "bases": "unittest.case.TestCase"}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.setUp", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.setUp", "type": "function", "doc": "<p>Hook method for setting up the test fixture before exercising it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.tearDown", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.tearDown", "type": "function", "doc": "<p>Hook method for deconstructing the test fixture after testing it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.test_interpreter_requires_environment_true", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_check_call</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.test_interpreter_requires_environment_false", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_check_call</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.test_interpreter_requires_environment_details", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_check_call</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"fullname": "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome", "modulename": "test.test_script_helper", "qualname": "TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mock_check_call</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support": {"fullname": "test.test_support", "modulename": "test.test_support", "type": "module", "doc": "<p></p>\n"}, "test.test_support.TestSupport": {"fullname": "test.test_support.TestSupport", "modulename": "test.test_support", "qualname": "TestSupport", "type": "class", "doc": "<p>A class whose instances are single test cases.</p>\n\n<p>By default, the test code itself should be placed in a method named\n'runTest'.</p>\n\n<p>If the fixture may be used for many test cases, create as\nmany test methods as are needed. When instantiating such a TestCase\nsubclass, specify in the constructor arguments the name of the test method\nthat the instance is to execute.</p>\n\n<p>Test authors should subclass TestCase for their own tests. Construction\nand deconstruction of the test's environment ('fixture') can be\nimplemented by overriding the 'setUp' and 'tearDown' methods respectively.</p>\n\n<p>If it is necessary to override the __init__ method, the base class\n__init__ method must always be called. It is important that subclasses\nshould not change the signature of their __init__ method, since instances\nof the classes are instantiated automatically by parts of the framework\nin order to be run.</p>\n\n<p>When subclassing TestCase, you can set these attributes:</p>\n\n<ul>\n<li>failureException: determines which exception will be raised when\nthe instance's assertion methods fail; test methods raising this\nexception will be deemed to have 'failed' rather than 'errored'.</li>\n<li>longMessage: determines whether long messages (including repr of\nobjects used in assert methods) will be printed on failure in <em>addition</em>\nto any explicit message passed.</li>\n<li>maxDiff: sets the maximum length of a diff in failure messages\nby assert methods using difflib. It is looked up as an instance\nattribute so can be configured by individual tests if required.</li>\n</ul>\n", "bases": "unittest.case.TestCase"}, "test.test_support.TestSupport.test_import_module": {"fullname": "test.test_support.TestSupport.test_import_module", "modulename": "test.test_support", "qualname": "TestSupport.test_import_module", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_import_fresh_module": {"fullname": "test.test_support.TestSupport.test_import_fresh_module", "modulename": "test.test_support", "qualname": "TestSupport.test_import_fresh_module", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_get_attribute": {"fullname": "test.test_support.TestSupport.test_get_attribute", "modulename": "test.test_support", "qualname": "TestSupport.test_get_attribute", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_get_original_stdout": {"fullname": "test.test_support.TestSupport.test_get_original_stdout", "modulename": "test.test_support", "qualname": "TestSupport.test_get_original_stdout", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_unload": {"fullname": "test.test_support.TestSupport.test_unload", "modulename": "test.test_support", "qualname": "TestSupport.test_unload", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_unlink": {"fullname": "test.test_support.TestSupport.test_unlink", "modulename": "test.test_support", "qualname": "TestSupport.test_unlink", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_rmtree": {"fullname": "test.test_support.TestSupport.test_rmtree", "modulename": "test.test_support", "qualname": "TestSupport.test_rmtree", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_forget": {"fullname": "test.test_support.TestSupport.test_forget", "modulename": "test.test_support", "qualname": "TestSupport.test_forget", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_HOST": {"fullname": "test.test_support.TestSupport.test_HOST", "modulename": "test.test_support", "qualname": "TestSupport.test_HOST", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_find_unused_port": {"fullname": "test.test_support.TestSupport.test_find_unused_port", "modulename": "test.test_support", "qualname": "TestSupport.test_find_unused_port", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_bind_port": {"fullname": "test.test_support.TestSupport.test_bind_port", "modulename": "test.test_support", "qualname": "TestSupport.test_bind_port", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_dir": {"fullname": "test.test_support.TestSupport.test_temp_dir", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_dir", "type": "function", "doc": "<p>Test that temp_dir() creates and destroys its directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_dir__path_none": {"fullname": "test.test_support.TestSupport.test_temp_dir__path_none", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_dir__path_none", "type": "function", "doc": "<p>Test passing no path.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"fullname": "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_dir__existing_dir__quiet_default", "type": "function", "doc": "<p>Test passing a directory that already exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"fullname": "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_dir__existing_dir__quiet_true", "type": "function", "doc": "<p>Test passing a directory that already exists with quiet=True.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"fullname": "test.test_support.TestSupport.test_temp_dir__forked_child", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_dir__forked_child", "type": "function", "doc": "<p>Test that a forked child process does not remove the directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_change_cwd": {"fullname": "test.test_support.TestSupport.test_change_cwd", "modulename": "test.test_support", "qualname": "TestSupport.test_change_cwd", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"fullname": "test.test_support.TestSupport.test_change_cwd__non_existent_dir", "modulename": "test.test_support", "qualname": "TestSupport.test_change_cwd__non_existent_dir", "type": "function", "doc": "<p>Test passing a non-existent directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"fullname": "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true", "modulename": "test.test_support", "qualname": "TestSupport.test_change_cwd__non_existent_dir__quiet_true", "type": "function", "doc": "<p>Test passing a non-existent directory with quiet=True.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"fullname": "test.test_support.TestSupport.test_change_cwd__chdir_warning", "modulename": "test.test_support", "qualname": "TestSupport.test_change_cwd__chdir_warning", "type": "function", "doc": "<p>Check the warning message when os.chdir() fails.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_cwd": {"fullname": "test.test_support.TestSupport.test_temp_cwd", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_cwd", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"fullname": "test.test_support.TestSupport.test_temp_cwd__name_none", "modulename": "test.test_support", "qualname": "TestSupport.test_temp_cwd__name_none", "type": "function", "doc": "<p>Test passing None to temp_cwd().</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_sortdict": {"fullname": "test.test_support.TestSupport.test_sortdict", "modulename": "test.test_support", "qualname": "TestSupport.test_sortdict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_make_bad_fd": {"fullname": "test.test_support.TestSupport.test_make_bad_fd", "modulename": "test.test_support", "qualname": "TestSupport.test_make_bad_fd", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_check_syntax_error": {"fullname": "test.test_support.TestSupport.test_check_syntax_error", "modulename": "test.test_support", "qualname": "TestSupport.test_check_syntax_error", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_CleanImport": {"fullname": "test.test_support.TestSupport.test_CleanImport", "modulename": "test.test_support", "qualname": "TestSupport.test_CleanImport", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_DirsOnSysPath": {"fullname": "test.test_support.TestSupport.test_DirsOnSysPath", "modulename": "test.test_support", "qualname": "TestSupport.test_DirsOnSysPath", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_captured_stdout": {"fullname": "test.test_support.TestSupport.test_captured_stdout", "modulename": "test.test_support", "qualname": "TestSupport.test_captured_stdout", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_captured_stderr": {"fullname": "test.test_support.TestSupport.test_captured_stderr", "modulename": "test.test_support", "qualname": "TestSupport.test_captured_stderr", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_captured_stdin": {"fullname": "test.test_support.TestSupport.test_captured_stdin", "modulename": "test.test_support", "qualname": "TestSupport.test_captured_stdin", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_gc_collect": {"fullname": "test.test_support.TestSupport.test_gc_collect", "modulename": "test.test_support", "qualname": "TestSupport.test_gc_collect", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_python_is_optimized": {"fullname": "test.test_support.TestSupport.test_python_is_optimized", "modulename": "test.test_support", "qualname": "TestSupport.test_python_is_optimized", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_swap_attr": {"fullname": "test.test_support.TestSupport.test_swap_attr", "modulename": "test.test_support", "qualname": "TestSupport.test_swap_attr", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_swap_item": {"fullname": "test.test_support.TestSupport.test_swap_item", "modulename": "test.test_support", "qualname": "TestSupport.test_swap_item", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.RefClass": {"fullname": "test.test_support.TestSupport.RefClass", "modulename": "test.test_support", "qualname": "TestSupport.RefClass", "type": "class", "doc": "<p></p>\n"}, "test.test_support.TestSupport.RefClass.__init__": {"fullname": "test.test_support.TestSupport.RefClass.__init__", "modulename": "test.test_support", "qualname": "TestSupport.RefClass.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.test_support.TestSupport.RefClass.attribute1": {"fullname": "test.test_support.TestSupport.RefClass.attribute1", "modulename": "test.test_support", "qualname": "TestSupport.RefClass.attribute1", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.test_support.TestSupport.RefClass.attribute2": {"fullname": "test.test_support.TestSupport.RefClass.attribute2", "modulename": "test.test_support", "qualname": "TestSupport.RefClass.attribute2", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.test_support.TestSupport.OtherClass": {"fullname": "test.test_support.TestSupport.OtherClass", "modulename": "test.test_support", "qualname": "TestSupport.OtherClass", "type": "class", "doc": "<p></p>\n"}, "test.test_support.TestSupport.OtherClass.__init__": {"fullname": "test.test_support.TestSupport.OtherClass.__init__", "modulename": "test.test_support", "qualname": "TestSupport.OtherClass.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "test.test_support.TestSupport.OtherClass.attribute2": {"fullname": "test.test_support.TestSupport.OtherClass.attribute2", "modulename": "test.test_support", "qualname": "TestSupport.OtherClass.attribute2", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.test_support.TestSupport.OtherClass.attribute3": {"fullname": "test.test_support.TestSupport.OtherClass.attribute3", "modulename": "test.test_support", "qualname": "TestSupport.OtherClass.attribute3", "type": "variable", "doc": "<p></p>\n", "default_value": " = None"}, "test.test_support.TestSupport.test_detect_api_mismatch": {"fullname": "test.test_support.TestSupport.test_detect_api_mismatch", "modulename": "test.test_support", "qualname": "TestSupport.test_detect_api_mismatch", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"fullname": "test.test_support.TestSupport.test_detect_api_mismatch__ignore", "modulename": "test.test_support", "qualname": "TestSupport.test_detect_api_mismatch__ignore", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_check__all__": {"fullname": "test.test_support.TestSupport.test_check__all__", "modulename": "test.test_support", "qualname": "TestSupport.test_check__all__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_reap_children": {"fullname": "test.test_support.TestSupport.test_reap_children", "modulename": "test.test_support", "qualname": "TestSupport.test_reap_children", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.check_options": {"fullname": "test.test_support.TestSupport.check_options", "modulename": "test.test_support", "qualname": "TestSupport.check_options", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">func</span>, </span><span class=\"param\"><span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"fullname": "test.test_support.TestSupport.test_args_from_interpreter_flags", "modulename": "test.test_support", "qualname": "TestSupport.test_args_from_interpreter_flags", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"fullname": "test.test_support.TestSupport.test_optim_args_from_interpreter_flags", "modulename": "test.test_support", "qualname": "TestSupport.test_optim_args_from_interpreter_flags", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_match_test": {"fullname": "test.test_support.TestSupport.test_match_test", "modulename": "test.test_support", "qualname": "TestSupport.test_match_test", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_fd_count": {"fullname": "test.test_support.TestSupport.test_fd_count", "modulename": "test.test_support", "qualname": "TestSupport.test_fd_count", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.check_print_warning": {"fullname": "test.test_support.TestSupport.check_print_warning", "modulename": "test.test_support", "qualname": "TestSupport.check_print_warning", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span>, </span><span class=\"param\"><span class=\"n\">expected</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.TestSupport.test_print_warning": {"fullname": "test.test_support.TestSupport.test_print_warning", "modulename": "test.test_support", "qualname": "TestSupport.test_print_warning", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "test.test_support.test_main": {"fullname": "test.test_support.test_main", "modulename": "test.test_support", "qualname": "test_main", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"test": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.support": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "test.support.PIPE_MAX_SIZE": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.verbose": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.max_memuse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.use_resources": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.failfast": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.Error": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "test.support.TestFailed": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "test.support.TestDidNotRun": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "test.support.ResourceDenied": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 40}, "test.support.import_module": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 62}, "test.support.import_fresh_module": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 184}, "test.support.CleanImport": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 55}, "test.support.CleanImport.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "test.support.unload": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.forget": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "test.support.record_original_stdout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.get_original_stdout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "test.support.captured_stdout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 23}, "test.support.captured_stdin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 37}, "test.support.captured_stderr": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 26}, "test.support.TESTFN": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "test.support.SAVEDCWD": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.support.unlink": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.rmtree": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.temp_cwd": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 93}, "test.support.findfile": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 66}, "test.support.create_empty_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "test.support.can_symlink": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "test.support.fs_is_case_insensitive": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "test.support.is_resource_enabled": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 36}, "test.support.requires": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 12}, "test.support.requires_freebsd_version": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 43}, "test.support.requires_linux_version": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 45}, "test.support.requires_mac_ver": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 45}, "test.support.requires_hashdigest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 70}, "test.support.check_syntax_error": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "test.support.check_syntax_warning": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "test.support.TransientResource": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "test.support.TransientResource.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "test.support.time_out": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.support.socket_peer_reset": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.support.ioerror_peer_reset": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.support.transient_internet": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 21}, "test.support.BasicTestRunner": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.support.BasicTestRunner.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.support.BasicTestRunner.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "test.support.run_unittest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 10}, "test.support.run_doctest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 47}, "test.support.skip_unless_symlink": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "test.support.requires_gzip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.requires_bz2": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.requires_lzma": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.bigmemtest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 119}, "test.support.bigaddrspacetest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "test.support.cpython_only": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "test.support.get_attribute": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "test.support.requires_IEEE_754": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.skip_unless_xattr": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "test.support.requires_zlib": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.anticipate_failure": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 33}, "test.support.load_package_tests": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 41}, "test.support.detect_api_mismatch": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 51}, "test.support.check__all__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 245}, "test.support.skip_unless_bind_unix_socket": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "test.support.skip_if_buggy_ucrt_strfptime": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 50}, "test.support.ignore_warnings": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 29}, "test.support.is_jython": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.is_android": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.check_impl_detail": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 47}, "test.support.unix_shell": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "test.support.setswitchinterval": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.HOST": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "test.support.IPV6_ENABLED": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.find_unused_port": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 604}, "test.support.bind_port": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 142}, "test.support.open_urlresource": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "test.support.bind_unix_socket": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "test.support.temp_umask": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "test.support.reap_children": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 38}, "test.support.TestHandler": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 44}, "test.support.TestHandler.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 10}, "test.support.TestHandler.shouldFlush": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "test.support.TestHandler.emit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 23}, "test.support.TestHandler.matches": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 14}, "test.support.threading_setup": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "test.support.threading_cleanup": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "test.support.reap_threads": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "test.support.start_threads": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "test.support.check_warnings": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 68}, "test.support.check_no_resource_warning": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 50}, "test.support.check_no_warnings": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 79}, "test.support.EnvironmentVarGuard": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 18}, "test.support.EnvironmentVarGuard.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.support.EnvironmentVarGuard.keys": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "test.support.EnvironmentVarGuard.set": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "test.support.EnvironmentVarGuard.unset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "test.support.run_with_locale": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "test.support.swap_item": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 97}, "test.support.swap_attr": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 96}, "test.support.Matcher": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.support.Matcher.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.support.Matcher.matches": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 50}, "test.support.Matcher.match_value": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 16}, "test.support.set_memlimit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.SuppressCrashReport": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "test.support.SuppressCrashReport.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.support.SuppressCrashReport.old_value": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.SuppressCrashReport.old_modes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.sortdict": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "test.support.run_with_tz": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.support.PGO": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.support.missing_compiler_executable": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 55}, "test.support.fd_count": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "test.support.ALWAYS_EQ": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "test.support.LARGEST": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.support.SMALLEST": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "test.test_script_helper": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "test.test_script_helper.TestScriptHelper": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 268}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"qualname": 9, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"qualname": 10, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 14}, "test.test_script_helper.TestScriptHelperEnvironment": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"qualname": 7, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "test.test_support": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 268}, "test.test_support.TestSupport.test_import_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_import_fresh_module": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_get_attribute": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_get_original_stdout": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_unload": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_unlink": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_rmtree": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_forget": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_HOST": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_find_unused_port": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_bind_port": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_temp_dir": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "test.test_support.TestSupport.test_temp_dir__path_none": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"qualname": 8, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"qualname": 8, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "test.test_support.TestSupport.test_change_cwd": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"qualname": 7, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"qualname": 9, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "test.test_support.TestSupport.test_temp_cwd": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "test.test_support.TestSupport.test_sortdict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_make_bad_fd": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_check_syntax_error": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_CleanImport": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_DirsOnSysPath": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_captured_stdout": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_captured_stderr": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_captured_stdin": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_gc_collect": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_python_is_optimized": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_swap_attr": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_swap_item": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.RefClass": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.RefClass.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.test_support.TestSupport.RefClass.attribute1": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.RefClass.attribute2": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.OtherClass": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.OtherClass.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "test.test_support.TestSupport.OtherClass.attribute2": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.OtherClass.attribute3": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_detect_api_mismatch": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_check__all__": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_reap_children": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.check_options": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"qualname": 7, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_match_test": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_fd_count": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.TestSupport.check_print_warning": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "test.test_support.TestSupport.test_print_warning": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "test.test_support.test_main": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}}, "length": 189, "save": true}, "index": {"qualname": {"root": {"7": {"5": {"4": {"docs": {"test.support.requires_IEEE_754": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}}, "df": 11, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {"test.support.PGO": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}, "test.support.max_memuse": {"tf": 1}}, "df": 2}, "c": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.Matcher.match_value": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 2}, "r": {"docs": {"test.support.Matcher": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}}, "df": 4}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.test_support.test_main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.max_memuse": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.set_memlimit": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"test.support.captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.start_threads": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"test.support.can_symlink": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.sortdict": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.unix_shell": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.set_memlimit": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.setswitchinterval": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"test.support.threading_setup": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SMALLEST": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.verbose": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.Matcher.match_value": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.use_resources": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.unload": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"test.support.unlink": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_unittest": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.unix_shell": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.EnvironmentVarGuard.unset": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"test.support.temp_umask": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.use_resources": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.record_original_stdout": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.requires_gzip": {"tf": 1}, "test.support.requires_bz2": {"tf": 1}, "test.support.requires_lzma": {"tf": 1}, "test.support.requires_IEEE_754": {"tf": 1}, "test.support.requires_zlib": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 14}, "d": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.RefClass": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"test.support.rmtree": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.BasicTestRunner.run": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.run_with_locale": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.failfast": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.forget": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}, "d": {"docs": {"test.support.fd_count": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.Error": {"tf": 1}, "test.support.check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.IPV6_ENABLED": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2}}}}}}}, "q": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}, "test.test_support.test_main": {"tf": 1}}, "df": 54, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestFailed": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"test.support.TESTFN": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.TestDidNotRun": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}, "test.test_support.TestSupport.RefClass": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 54}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}}, "df": 5}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 9}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TransientResource": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.time_out": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.threading_setup": {"tf": 1}, "test.support.threading_cleanup": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"test.support.reap_threads": {"tf": 1}, "test.support.start_threads": {"tf": 1}}, "df": 2}}}}}}, "z": {"docs": {"test.support.run_with_tz": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 4}}}, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 6}}}}}}}}}}, "s": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.ioerror_peer_reset": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_IEEE_754": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "v": {"6": {"docs": {"test.support.IPV6_ENABLED": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"test.support.swap_item": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.CleanImport.__init__": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"test.support.threading_cleanup": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {"test.support.can_symlink": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}}, "df": 11}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.reap_children": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.cpython_only": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.fd_count": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_gc_collect": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.cpython_only": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.check_options": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 2}}, "k": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.OtherClass": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 4}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.get_original_stdout": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}}, "df": 4}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.requires_gzip": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"test.test_support.TestSupport.test_gc_collect": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"test.support.requires_linux_version": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"test.support.requires_lzma": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.run_with_locale": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.LARGEST": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.HOST": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_syntax_warning": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 5, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.run_with_locale": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.BasicTestRunner": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.BasicTestRunner.run": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "d": {"docs": {"test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}}, "df": 1}}, "z": {"2": {"docs": {"test.support.requires_bz2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1, "s": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"1": {"docs": {"test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}}, "df": 1}, "2": {"docs": {"test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}}, "df": 2}, "3": {"docs": {"test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 1}, "docs": {"test.support.get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"test.support.is_android": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check__all__": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.skip_unless_xattr": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"test.support.requires_zlib": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.is_jython": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2, "t": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}, "n": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2, "e": {"docs": {"test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 3}}}}}}}, "fullname": {"root": {"7": {"5": {"4": {"docs": {"test.support.requires_IEEE_754": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test": {"tf": 1}, "test.support": {"tf": 1}, "test.support.PIPE_MAX_SIZE": {"tf": 1}, "test.support.verbose": {"tf": 1}, "test.support.max_memuse": {"tf": 1}, "test.support.use_resources": {"tf": 1}, "test.support.failfast": {"tf": 1}, "test.support.Error": {"tf": 1}, "test.support.TestFailed": {"tf": 1}, "test.support.TestDidNotRun": {"tf": 1}, "test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.CleanImport": {"tf": 1}, "test.support.CleanImport.__init__": {"tf": 1}, "test.support.unload": {"tf": 1}, "test.support.forget": {"tf": 1}, "test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.TESTFN": {"tf": 1}, "test.support.SAVEDCWD": {"tf": 1}, "test.support.unlink": {"tf": 1}, "test.support.rmtree": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.can_symlink": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.BasicTestRunner": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.BasicTestRunner.run": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.requires_gzip": {"tf": 1}, "test.support.requires_bz2": {"tf": 1}, "test.support.requires_lzma": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.requires_IEEE_754": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.requires_zlib": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.unix_shell": {"tf": 1}, "test.support.setswitchinterval": {"tf": 1}, "test.support.HOST": {"tf": 1}, "test.support.IPV6_ENABLED": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.open_urlresource": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.threading_setup": {"tf": 1}, "test.support.threading_cleanup": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.start_threads": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}, "test.support.run_with_locale": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.support.set_memlimit": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}, "test.support.sortdict": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}, "test.support.PGO": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.support.fd_count": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}, "test.test_script_helper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1.7320508075688772}, "test.test_support": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_import_module": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_unload": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_unlink": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_rmtree": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_forget": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_HOST": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_bind_port": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_sortdict": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_swap_item": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.RefClass": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.OtherClass": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_check__all__": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_reap_children": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.check_options": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_match_test": {"tf": 2}, "test.test_support.TestSupport.test_fd_count": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.check_print_warning": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_print_warning": {"tf": 1.7320508075688772}, "test.test_support.test_main": {"tf": 1.7320508075688772}}, "df": 189, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestFailed": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"test.support.TESTFN": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.TestDidNotRun": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}, "test.test_support.TestSupport.RefClass": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 54}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}}, "df": 5}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 9}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TransientResource": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.time_out": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.threading_setup": {"tf": 1}, "test.support.threading_cleanup": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"test.support.reap_threads": {"tf": 1}, "test.support.start_threads": {"tf": 1}}, "df": 2}}}}}}, "z": {"docs": {"test.support.run_with_tz": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support": {"tf": 1}, "test.support.PIPE_MAX_SIZE": {"tf": 1}, "test.support.verbose": {"tf": 1}, "test.support.max_memuse": {"tf": 1}, "test.support.use_resources": {"tf": 1}, "test.support.failfast": {"tf": 1}, "test.support.Error": {"tf": 1}, "test.support.TestFailed": {"tf": 1}, "test.support.TestDidNotRun": {"tf": 1}, "test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.CleanImport": {"tf": 1}, "test.support.CleanImport.__init__": {"tf": 1}, "test.support.unload": {"tf": 1}, "test.support.forget": {"tf": 1}, "test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.TESTFN": {"tf": 1}, "test.support.SAVEDCWD": {"tf": 1}, "test.support.unlink": {"tf": 1}, "test.support.rmtree": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.can_symlink": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.BasicTestRunner": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.BasicTestRunner.run": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.requires_gzip": {"tf": 1}, "test.support.requires_bz2": {"tf": 1}, "test.support.requires_lzma": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.requires_IEEE_754": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.requires_zlib": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.unix_shell": {"tf": 1}, "test.support.setswitchinterval": {"tf": 1}, "test.support.HOST": {"tf": 1}, "test.support.IPV6_ENABLED": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.open_urlresource": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.threading_setup": {"tf": 1}, "test.support.threading_cleanup": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.start_threads": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}, "test.support.run_with_locale": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.support.set_memlimit": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}, "test.support.sortdict": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}, "test.support.PGO": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.support.fd_count": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}, "test.test_support": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}, "test.test_support.TestSupport.RefClass": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}, "test.test_support.test_main": {"tf": 1}}, "df": 173}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"test.support.captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.start_threads": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"test.support.can_symlink": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.sortdict": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.unix_shell": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.set_memlimit": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.setswitchinterval": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"test.support.threading_setup": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SMALLEST": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 15}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {"test.support.PGO": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}, "test.support.max_memuse": {"tf": 1}}, "df": 2}, "c": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.Matcher.match_value": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 2}, "r": {"docs": {"test.support.Matcher": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}}, "df": 4}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.test_support.test_main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.max_memuse": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.set_memlimit": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.verbose": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.Matcher.match_value": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.use_resources": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.unload": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"test.support.unlink": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_unittest": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.unix_shell": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.EnvironmentVarGuard.unset": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"test.support.temp_umask": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.use_resources": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.record_original_stdout": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.requires_gzip": {"tf": 1}, "test.support.requires_bz2": {"tf": 1}, "test.support.requires_lzma": {"tf": 1}, "test.support.requires_IEEE_754": {"tf": 1}, "test.support.requires_zlib": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 14}, "d": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.RefClass": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"test.support.rmtree": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.BasicTestRunner.run": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.run_with_locale": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.failfast": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.forget": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}, "d": {"docs": {"test.support.fd_count": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.Error": {"tf": 1}, "test.support.check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.IPV6_ENABLED": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2}}}}}}}, "q": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}}, "df": 4}}}, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.TransientResource.__init__": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1}, "test.support.Matcher.__init__": {"tf": 1}, "test.support.SuppressCrashReport.__init__": {"tf": 1}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 6}}}}}}}}}}, "s": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.ioerror_peer_reset": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_IEEE_754": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "v": {"6": {"docs": {"test.support.IPV6_ENABLED": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"test.support.swap_item": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.CleanImport.__init__": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"test.support.threading_cleanup": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {"test.support.can_symlink": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}}, "df": 11}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.reap_children": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.cpython_only": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.fd_count": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_gc_collect": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.record_original_stdout": {"tf": 1}, "test.support.get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.cpython_only": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.check_options": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}}, "df": 2}}, "k": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.OtherClass": {"tf": 1}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 4}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.get_original_stdout": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}}, "df": 4}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.requires_gzip": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"test.test_support.TestSupport.test_gc_collect": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"test.support.requires_linux_version": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"test.support.requires_lzma": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.run_with_locale": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.LARGEST": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.HOST": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 15}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_syntax_warning": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 5, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.run_with_locale": {"tf": 1}, "test.support.run_with_tz": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.BasicTestRunner": {"tf": 1}, "test.support.BasicTestRunner.__init__": {"tf": 1}, "test.support.BasicTestRunner.run": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "d": {"docs": {"test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}}, "df": 1}}, "z": {"2": {"docs": {"test.support.requires_bz2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1, "s": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"1": {"docs": {"test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}}, "df": 1}, "2": {"docs": {"test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}}, "df": 2}, "3": {"docs": {"test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 1}, "docs": {"test.support.get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"test.support.is_android": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check__all__": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.skip_unless_xattr": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"test.support.requires_zlib": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.is_jython": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2, "t": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}, "n": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2, "e": {"docs": {"test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 3}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"0": {"docs": {"test.support.max_memuse": {"tf": 1}}, "df": 1}, "1": {"docs": {"test.support.verbose": {"tf": 1}}, "df": 1}, "2": {"2": {"8": {"3": {"0": {"docs": {"test.support.TESTFN": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"1": {"9": {"4": {"3": {"0": {"5": {"docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"test.support.PIPE_MAX_SIZE": {"tf": 1}, "test.support.verbose": {"tf": 1}, "test.support.max_memuse": {"tf": 1}, "test.support.use_resources": {"tf": 1}, "test.support.failfast": {"tf": 1}, "test.support.TESTFN": {"tf": 1.4142135623730951}, "test.support.SAVEDCWD": {"tf": 1.4142135623730951}, "test.support.time_out": {"tf": 1.4142135623730951}, "test.support.socket_peer_reset": {"tf": 1.4142135623730951}, "test.support.ioerror_peer_reset": {"tf": 1.4142135623730951}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.support.unix_shell": {"tf": 1.4142135623730951}, "test.support.HOST": {"tf": 1.4142135623730951}, "test.support.IPV6_ENABLED": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}, "test.support.PGO": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1.4142135623730951}, "test.support.LARGEST": {"tf": 1.4142135623730951}, "test.support.SMALLEST": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 25, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"test.support.use_resources": {"tf": 1}, "test.support.SuppressCrashReport.old_value": {"tf": 1}, "test.support.SuppressCrashReport.old_modes": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1}}, "df": 7}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.failfast": {"tf": 1}, "test.support.is_jython": {"tf": 1}, "test.support.is_android": {"tf": 1}, "test.support.PGO": {"tf": 1}}, "df": 4}}, "l": {"2": {"2": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "x": {"2": {"7": {"docs": {"test.support.TESTFN": {"tf": 1.4142135623730951}, "test.support.SAVEDCWD": {"tf": 1.4142135623730951}, "test.support.unix_shell": {"tf": 1.4142135623730951}, "test.support.HOST": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.TESTFN": {"tf": 1}, "test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}}, "df": 7}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.support.TESTFN": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.IPV6_ENABLED": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"5": {"1": {"0": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"5": {"1": {"0": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "w": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}}, "g": {"3": {"3": {"docs": {"test.support.SAVEDCWD": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.HOST": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.LARGEST": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SMALLEST": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.time_out": {"tf": 1}, "test.support.socket_peer_reset": {"tf": 1}, "test.support.ioerror_peer_reset": {"tf": 1}, "test.support.ALWAYS_EQ": {"tf": 1}, "test.support.LARGEST": {"tf": 1}, "test.support.SMALLEST": {"tf": 1}}, "df": 6}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.unix_shell": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"test.support.ALWAYS_EQ": {"tf": 1}}, "df": 1}}}}, "signature": {"root": {"0": {"docs": {"test.support.transient_internet": {"tf": 1}, "test.support.run_doctest": {"tf": 1}}, "df": 2}, "1": {"docs": {"test.support.check_syntax_warning": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}, "2": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "3": {"0": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}, "9": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.check_syntax_error": {"tf": 1.4142135623730951}, "test.support.check_syntax_warning": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {}, "df": 0}, "docs": {"test.support.import_module": {"tf": 5.744562646538029}, "test.support.import_fresh_module": {"tf": 6.164414002968976}, "test.support.CleanImport.__init__": {"tf": 3.1622776601683795}, "test.support.unload": {"tf": 3.1622776601683795}, "test.support.forget": {"tf": 3.1622776601683795}, "test.support.record_original_stdout": {"tf": 3.1622776601683795}, "test.support.get_original_stdout": {"tf": 2.6457513110645907}, "test.support.captured_stdout": {"tf": 2.6457513110645907}, "test.support.captured_stdin": {"tf": 2.6457513110645907}, "test.support.captured_stderr": {"tf": 2.6457513110645907}, "test.support.unlink": {"tf": 3.1622776601683795}, "test.support.rmtree": {"tf": 3.1622776601683795}, "test.support.temp_cwd": {"tf": 4.898979485566356}, "test.support.findfile": {"tf": 4.242640687119285}, "test.support.create_empty_file": {"tf": 3.1622776601683795}, "test.support.can_symlink": {"tf": 2.6457513110645907}, "test.support.fs_is_case_insensitive": {"tf": 3.1622776601683795}, "test.support.is_resource_enabled": {"tf": 3.1622776601683795}, "test.support.requires": {"tf": 4.242640687119285}, "test.support.requires_freebsd_version": {"tf": 3.4641016151377544}, "test.support.requires_linux_version": {"tf": 3.4641016151377544}, "test.support.requires_mac_ver": {"tf": 3.4641016151377544}, "test.support.requires_hashdigest": {"tf": 4.242640687119285}, "test.support.check_syntax_error": {"tf": 6.708203932499369}, "test.support.check_syntax_warning": {"tf": 6.708203932499369}, "test.support.TransientResource.__init__": {"tf": 3.7416573867739413}, "test.support.transient_internet": {"tf": 5.744562646538029}, "test.support.BasicTestRunner.__init__": {"tf": 2}, "test.support.BasicTestRunner.run": {"tf": 3.7416573867739413}, "test.support.run_unittest": {"tf": 3.4641016151377544}, "test.support.run_doctest": {"tf": 5.0990195135927845}, "test.support.skip_unless_symlink": {"tf": 3.1622776601683795}, "test.support.requires_gzip": {"tf": 3.1622776601683795}, "test.support.requires_bz2": {"tf": 3.1622776601683795}, "test.support.requires_lzma": {"tf": 3.1622776601683795}, "test.support.bigmemtest": {"tf": 4.69041575982343}, "test.support.bigaddrspacetest": {"tf": 3.1622776601683795}, "test.support.cpython_only": {"tf": 3.1622776601683795}, "test.support.get_attribute": {"tf": 3.7416573867739413}, "test.support.requires_IEEE_754": {"tf": 3.1622776601683795}, "test.support.skip_unless_xattr": {"tf": 3.1622776601683795}, "test.support.requires_zlib": {"tf": 3.1622776601683795}, "test.support.anticipate_failure": {"tf": 3.1622776601683795}, "test.support.load_package_tests": {"tf": 4.69041575982343}, "test.support.detect_api_mismatch": {"tf": 5.385164807134504}, "test.support.check__all__": {"tf": 6.48074069840786}, "test.support.skip_unless_bind_unix_socket": {"tf": 3.1622776601683795}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 3.1622776601683795}, "test.support.ignore_warnings": {"tf": 3.872983346207417}, "test.support.check_impl_detail": {"tf": 3.4641016151377544}, "test.support.setswitchinterval": {"tf": 3.1622776601683795}, "test.support.find_unused_port": {"tf": 6.782329983125268}, "test.support.bind_port": {"tf": 4.47213595499958}, "test.support.open_urlresource": {"tf": 4.69041575982343}, "test.support.bind_unix_socket": {"tf": 3.7416573867739413}, "test.support.temp_umask": {"tf": 3.1622776601683795}, "test.support.reap_children": {"tf": 2.6457513110645907}, "test.support.TestHandler.__init__": {"tf": 2.8284271247461903}, "test.support.TestHandler.shouldFlush": {"tf": 3.1622776601683795}, "test.support.TestHandler.emit": {"tf": 3.7416573867739413}, "test.support.TestHandler.matches": {"tf": 4}, "test.support.threading_setup": {"tf": 2.6457513110645907}, "test.support.threading_cleanup": {"tf": 3.4641016151377544}, "test.support.reap_threads": {"tf": 3.1622776601683795}, "test.support.start_threads": {"tf": 4.242640687119285}, "test.support.check_warnings": {"tf": 4.242640687119285}, "test.support.check_no_resource_warning": {"tf": 3.1622776601683795}, "test.support.check_no_warnings": {"tf": 5.477225575051661}, "test.support.EnvironmentVarGuard.__init__": {"tf": 2}, "test.support.EnvironmentVarGuard.keys": {"tf": 3.1622776601683795}, "test.support.EnvironmentVarGuard.set": {"tf": 4.242640687119285}, "test.support.EnvironmentVarGuard.unset": {"tf": 3.7416573867739413}, "test.support.run_with_locale": {"tf": 4}, "test.support.swap_item": {"tf": 4.242640687119285}, "test.support.swap_attr": {"tf": 4.242640687119285}, "test.support.Matcher.__init__": {"tf": 2}, "test.support.Matcher.matches": {"tf": 4.47213595499958}, "test.support.Matcher.match_value": {"tf": 4.69041575982343}, "test.support.set_memlimit": {"tf": 3.1622776601683795}, "test.support.SuppressCrashReport.__init__": {"tf": 2}, "test.support.sortdict": {"tf": 3.1622776601683795}, "test.support.run_with_tz": {"tf": 3.1622776601683795}, "test.support.missing_compiler_executable": {"tf": 3.872983346207417}, "test.support.fd_count": {"tf": 2.6457513110645907}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 3.7416573867739413}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 3.7416573867739413}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 3.1622776601683795}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 3.7416573867739413}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 3.7416573867739413}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 3.7416573867739413}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 3.7416573867739413}, "test.test_support.TestSupport.test_import_module": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_get_attribute": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_unload": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_unlink": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_rmtree": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_forget": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_HOST": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_bind_port": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_dir": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_change_cwd": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_sortdict": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_CleanImport": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_gc_collect": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_swap_attr": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_swap_item": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 2}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 2}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_check__all__": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_reap_children": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.check_options": {"tf": 5.0990195135927845}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_match_test": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.test_fd_count": {"tf": 3.1622776601683795}, "test.test_support.TestSupport.check_print_warning": {"tf": 4.242640687119285}, "test.test_support.TestSupport.test_print_warning": {"tf": 3.1622776601683795}, "test.test_support.test_main": {"tf": 2.6457513110645907}}, "df": 144, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.unload": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.check__all__": {"tf": 1}}, "df": 7, "s": {"docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.check_syntax_error": {"tf": 1.4142135623730951}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.start_threads": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.sortdict": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}, "v": {"docs": {"test.support.Matcher.match_value": {"tf": 1}}, "df": 1}}, "f": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.unlink": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"test.support.reap_threads": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.transient_internet": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"test.support.requires_gzip": {"tf": 1}, "test.support.requires_bz2": {"tf": 1}, "test.support.requires_lzma": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.requires_IEEE_754": {"tf": 1}, "test.support.requires_zlib": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.threading_cleanup": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.CleanImport.__init__": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"test.support.requires": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler.__init__": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.record_original_stdout": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"test.support.BasicTestRunner.run": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}, "test.test_support.TestSupport.test_import_module": {"tf": 1}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1}, "test.test_support.TestSupport.test_unload": {"tf": 1}, "test.test_support.TestSupport.test_unlink": {"tf": 1}, "test.test_support.TestSupport.test_rmtree": {"tf": 1}, "test.test_support.TestSupport.test_forget": {"tf": 1}, "test.test_support.TestSupport.test_HOST": {"tf": 1}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1}, "test.test_support.TestSupport.test_bind_port": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}, "test.test_support.TestSupport.test_sortdict": {"tf": 1}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1}, "test.test_support.TestSupport.test_swap_item": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1}, "test.test_support.TestSupport.test_check__all__": {"tf": 1}, "test.test_support.TestSupport.test_reap_children": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1}, "test.test_support.TestSupport.test_match_test": {"tf": 1}, "test.test_support.TestSupport.test_fd_count": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}, "test.test_support.TestSupport.test_print_warning": {"tf": 1}}, "df": 66}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.rmtree": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "g": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.temp_cwd": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.BasicTestRunner.run": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"test.support.start_threads": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {"test.support.run_with_tz": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.temp_cwd": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"test.support.Matcher.match_value": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.EnvironmentVarGuard.set": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.threading_cleanup": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {"test.support.TransientResource.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.check_options": {"tf": 1}, "test.test_support.TestSupport.check_print_warning": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"test.support.EnvironmentVarGuard.set": {"tf": 1}, "test.support.EnvironmentVarGuard.unset": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"test.support.check_syntax_error": {"tf": 1}, "test.support.check_syntax_warning": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.set_memlimit": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_with_locale": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}}, "k": {"docs": {"test.support.Matcher.match_value": {"tf": 1}}, "df": 1, "w": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TransientResource.__init__": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_unittest": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.run_with_locale": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "d": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"test.support.detect_api_mismatch": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {"test.support.bind_unix_socket": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.support.open_urlresource": {"tf": 1}, "test.test_support.TestSupport.check_options": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"test.support.swap_attr": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.setswitchinterval": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"test.support.swap_item": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}, "c": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"test.support.open_urlresource": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"test.support.temp_umask": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.start_threads": {"tf": 1}}, "df": 1}}}}}}, "x": {"2": {"7": {"docs": {"test.support.check_no_warnings": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support.Error": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.Error": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestFailed": {"tf": 1}, "test.support.TestDidNotRun": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"test.support.captured_stdin": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.449489742783178}}, "df": 2}, "1": {"0": {"docs": {"test.support.requires_mac_ver": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"7": {"6": {"3": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"test.support.requires_freebsd_version": {"tf": 1.4142135623730951}, "test.support.requires_linux_version": {"tf": 1.4142135623730951}, "test.support.bigmemtest": {"tf": 1}, "test.support.check_warnings": {"tf": 1}}, "df": 4}, "3": {"1": {"4": {"7": {"docs": {}, "df": 0, "/": {"4": {"8": {"8": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"test.support.requires_linux_version": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"5": {"5": {"2": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "g": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}, "5": {"docs": {"test.support.requires_mac_ver": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 3}, "6": {"1": {"5": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"test.support.requires_linux_version": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"test.support.requires_freebsd_version": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"5": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "9": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "docs": {"test": {"tf": 1.7320508075688772}, "test.support": {"tf": 1.7320508075688772}, "test.support.PIPE_MAX_SIZE": {"tf": 1.7320508075688772}, "test.support.verbose": {"tf": 1.7320508075688772}, "test.support.max_memuse": {"tf": 1.7320508075688772}, "test.support.use_resources": {"tf": 1.7320508075688772}, "test.support.failfast": {"tf": 1.7320508075688772}, "test.support.Error": {"tf": 1.7320508075688772}, "test.support.TestFailed": {"tf": 1.7320508075688772}, "test.support.TestDidNotRun": {"tf": 1.7320508075688772}, "test.support.ResourceDenied": {"tf": 2.449489742783178}, "test.support.import_module": {"tf": 2.449489742783178}, "test.support.import_fresh_module": {"tf": 5.5677643628300215}, "test.support.CleanImport": {"tf": 3.872983346207417}, "test.support.CleanImport.__init__": {"tf": 1.7320508075688772}, "test.support.unload": {"tf": 1.7320508075688772}, "test.support.forget": {"tf": 2.6457513110645907}, "test.support.record_original_stdout": {"tf": 1.7320508075688772}, "test.support.get_original_stdout": {"tf": 1.7320508075688772}, "test.support.captured_stdout": {"tf": 2.23606797749979}, "test.support.captured_stdin": {"tf": 2.449489742783178}, "test.support.captured_stderr": {"tf": 2.23606797749979}, "test.support.TESTFN": {"tf": 1.7320508075688772}, "test.support.SAVEDCWD": {"tf": 1.7320508075688772}, "test.support.unlink": {"tf": 1.7320508075688772}, "test.support.rmtree": {"tf": 1.7320508075688772}, "test.support.temp_cwd": {"tf": 4.123105625617661}, "test.support.findfile": {"tf": 2.8284271247461903}, "test.support.create_empty_file": {"tf": 1.7320508075688772}, "test.support.can_symlink": {"tf": 1.7320508075688772}, "test.support.fs_is_case_insensitive": {"tf": 1.7320508075688772}, "test.support.is_resource_enabled": {"tf": 2.449489742783178}, "test.support.requires": {"tf": 1.7320508075688772}, "test.support.requires_freebsd_version": {"tf": 2.8284271247461903}, "test.support.requires_linux_version": {"tf": 2.8284271247461903}, "test.support.requires_mac_ver": {"tf": 2.449489742783178}, "test.support.requires_hashdigest": {"tf": 3.1622776601683795}, "test.support.check_syntax_error": {"tf": 1.7320508075688772}, "test.support.check_syntax_warning": {"tf": 1.7320508075688772}, "test.support.TransientResource": {"tf": 1.7320508075688772}, "test.support.TransientResource.__init__": {"tf": 1.7320508075688772}, "test.support.time_out": {"tf": 1.7320508075688772}, "test.support.socket_peer_reset": {"tf": 1.7320508075688772}, "test.support.ioerror_peer_reset": {"tf": 1.7320508075688772}, "test.support.transient_internet": {"tf": 1.7320508075688772}, "test.support.BasicTestRunner": {"tf": 1.7320508075688772}, "test.support.BasicTestRunner.__init__": {"tf": 1.7320508075688772}, "test.support.BasicTestRunner.run": {"tf": 1.7320508075688772}, "test.support.run_unittest": {"tf": 1.7320508075688772}, "test.support.run_doctest": {"tf": 2.449489742783178}, "test.support.skip_unless_symlink": {"tf": 1.4142135623730951}, "test.support.requires_gzip": {"tf": 1.7320508075688772}, "test.support.requires_bz2": {"tf": 1.7320508075688772}, "test.support.requires_lzma": {"tf": 1.7320508075688772}, "test.support.bigmemtest": {"tf": 3.1622776601683795}, "test.support.bigaddrspacetest": {"tf": 1.7320508075688772}, "test.support.cpython_only": {"tf": 1.7320508075688772}, "test.support.get_attribute": {"tf": 1.7320508075688772}, "test.support.requires_IEEE_754": {"tf": 1.7320508075688772}, "test.support.skip_unless_xattr": {"tf": 1.4142135623730951}, "test.support.requires_zlib": {"tf": 1.7320508075688772}, "test.support.anticipate_failure": {"tf": 2.23606797749979}, "test.support.load_package_tests": {"tf": 3}, "test.support.detect_api_mismatch": {"tf": 2.449489742783178}, "test.support.check__all__": {"tf": 5.656854249492381}, "test.support.skip_unless_bind_unix_socket": {"tf": 1.7320508075688772}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 2.449489742783178}, "test.support.ignore_warnings": {"tf": 2.449489742783178}, "test.support.is_jython": {"tf": 1.7320508075688772}, "test.support.is_android": {"tf": 1.7320508075688772}, "test.support.check_impl_detail": {"tf": 2.8284271247461903}, "test.support.unix_shell": {"tf": 1.7320508075688772}, "test.support.setswitchinterval": {"tf": 1.7320508075688772}, "test.support.HOST": {"tf": 1.7320508075688772}, "test.support.IPV6_ENABLED": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 5}, "test.support.bind_port": {"tf": 3.1622776601683795}, "test.support.open_urlresource": {"tf": 1.7320508075688772}, "test.support.bind_unix_socket": {"tf": 1.7320508075688772}, "test.support.temp_umask": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1.7320508075688772}, "test.support.TestHandler": {"tf": 1.7320508075688772}, "test.support.TestHandler.__init__": {"tf": 1.7320508075688772}, "test.support.TestHandler.shouldFlush": {"tf": 2.23606797749979}, "test.support.TestHandler.emit": {"tf": 2.449489742783178}, "test.support.TestHandler.matches": {"tf": 1.7320508075688772}, "test.support.threading_setup": {"tf": 1.7320508075688772}, "test.support.threading_cleanup": {"tf": 1.7320508075688772}, "test.support.reap_threads": {"tf": 1.7320508075688772}, "test.support.start_threads": {"tf": 1.7320508075688772}, "test.support.check_warnings": {"tf": 4.242640687119285}, "test.support.check_no_resource_warning": {"tf": 3.7416573867739413}, "test.support.check_no_warnings": {"tf": 3.4641016151377544}, "test.support.EnvironmentVarGuard": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard.__init__": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard.keys": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard.set": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard.unset": {"tf": 1.7320508075688772}, "test.support.run_with_locale": {"tf": 1.7320508075688772}, "test.support.swap_item": {"tf": 3.605551275463989}, "test.support.swap_attr": {"tf": 3.4641016151377544}, "test.support.Matcher": {"tf": 1.7320508075688772}, "test.support.Matcher.__init__": {"tf": 1.7320508075688772}, "test.support.Matcher.matches": {"tf": 2.449489742783178}, "test.support.Matcher.match_value": {"tf": 1.7320508075688772}, "test.support.set_memlimit": {"tf": 1.7320508075688772}, "test.support.SuppressCrashReport": {"tf": 2.449489742783178}, "test.support.SuppressCrashReport.__init__": {"tf": 1.7320508075688772}, "test.support.SuppressCrashReport.old_value": {"tf": 1.7320508075688772}, "test.support.SuppressCrashReport.old_modes": {"tf": 1.7320508075688772}, "test.support.sortdict": {"tf": 1.7320508075688772}, "test.support.run_with_tz": {"tf": 1.7320508075688772}, "test.support.PGO": {"tf": 1.7320508075688772}, "test.support.missing_compiler_executable": {"tf": 2.449489742783178}, "test.support.fd_count": {"tf": 1.7320508075688772}, "test.support.ALWAYS_EQ": {"tf": 1.7320508075688772}, "test.support.LARGEST": {"tf": 1.7320508075688772}, "test.support.SMALLEST": {"tf": 1.7320508075688772}, "test.test_script_helper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 5.656854249492381}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_ok_raises": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_failure_raises": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_isolated_when_env_not_required": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_true": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_false": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_details": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.test_interpreter_requires_environment_with_pythonhome": {"tf": 1.7320508075688772}, "test.test_support": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 5.656854249492381}, "test.test_support.TestSupport.test_import_module": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_import_fresh_module": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_get_attribute": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_get_original_stdout": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_unload": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_unlink": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_rmtree": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_forget": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_HOST": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_find_unused_port": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_bind_port": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_cwd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_sortdict": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_make_bad_fd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_check_syntax_error": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_CleanImport": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_DirsOnSysPath": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stdout": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stderr": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_captured_stdin": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_gc_collect": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_python_is_optimized": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_swap_attr": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_swap_item": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.RefClass": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.RefClass.__init__": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.RefClass.attribute1": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.RefClass.attribute2": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.OtherClass": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.OtherClass.__init__": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.OtherClass.attribute2": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.OtherClass.attribute3": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_detect_api_mismatch": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_detect_api_mismatch__ignore": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_check__all__": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_reap_children": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.check_options": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_args_from_interpreter_flags": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_optim_args_from_interpreter_flags": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_match_test": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_fd_count": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.check_print_warning": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_print_warning": {"tf": 1.7320508075688772}, "test.test_support.test_main": {"tf": 1.7320508075688772}}, "df": 189, "s": {"docs": {"test.support.run_doctest": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 2.23606797749979}, "test.support.TestHandler": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 7, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.test_script_helper": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestDidNotRun": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1.4142135623730951}, "test.support.requires_linux_version": {"tf": 1.4142135623730951}, "test.support.requires_mac_ver": {"tf": 1.4142135623730951}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 7}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1.4142135623730951}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"test.support.temp_umask": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "p": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.check__all__": {"tf": 2}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 6}}, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 3, "k": {"docs": {"test.support.captured_stdin": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 2}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 2}, "test.support.forget": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1.4142135623730951}, "test.support.captured_stderr": {"tf": 1.4142135623730951}, "test.support.findfile": {"tf": 1}, "test.support.run_doctest": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.captured_stdout": {"tf": 2}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.captured_stdin": {"tf": 2.449489742783178}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"test.support.captured_stderr": {"tf": 2.23606797749979}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.Matcher.match_value": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 2}, "test.support.TestHandler.__init__": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 6}}}, "y": {"docs": {"test.support.check__all__": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"test.support.find_unused_port": {"tf": 2.449489742783178}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 3.1622776601683795}, "test.support.bind_port": {"tf": 2.23606797749979}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 3, "s": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.sortdict": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1}, "test.support.TestHandler": {"tf": 1.4142135623730951}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 7, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "f": {"docs": {"test.support.load_package_tests": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_warnings": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.check_warnings": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check__all__": {"tf": 2}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1.4142135623730951}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1.4142135623730951}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}}, "df": 13}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.bigmemtest": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.run_unittest": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.support.fd_count": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.test_support.TestSupport.test_temp_dir": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestDidNotRun": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1, "d": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"test.test_support.TestSupport.test_temp_dir": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.temp_cwd": {"tf": 2}, "test.support.findfile": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.sortdict": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 3, "n": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_doctest": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bigmemtest": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {"test.support.Matcher.match_value": {"tf": 1}}, "df": 1}}, "f": {"docs": {"test.support.check_no_resource_warning": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support": {"tf": 1}, "test.support.Error": {"tf": 1}, "test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.CleanImport": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.bigmemtest": {"tf": 2}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1.4142135623730951}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.23606797749979}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1.4142135623730951}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 36, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"test.support.CleanImport": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1.7320508075688772}}, "df": 2}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestFailed": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {"test.support.reap_threads": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_fresh_module": {"tf": 2}}, "df": 1}}, "e": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {"test.support.requires_freebsd_version": {"tf": 2}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.forget": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.captured_stderr": {"tf": 1}, "test.support.findfile": {"tf": 1.4142135623730951}, "test.support.create_empty_file": {"tf": 1.4142135623730951}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}, "test.support.fd_count": {"tf": 1}}, "df": 7, "s": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}, "l": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.findfile": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "e": {"docs": {"test.support": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 3.605551275463989}, "test.support.CleanImport": {"tf": 1}, "test.support.forget": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.temp_cwd": {"tf": 2.6457513110645907}, "test.support.findfile": {"tf": 2.449489742783178}, "test.support.create_empty_file": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1.4142135623730951}, "test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1.7320508075688772}, "test.support.requires_linux_version": {"tf": 1.7320508075688772}, "test.support.requires_mac_ver": {"tf": 1.7320508075688772}, "test.support.requires_hashdigest": {"tf": 2}, "test.support.TransientResource": {"tf": 1.4142135623730951}, "test.support.transient_internet": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 3}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 2.8284271247461903}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1.4142135623730951}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 6.082762530298219}, "test.support.bind_port": {"tf": 3}, "test.support.temp_umask": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.TestHandler": {"tf": 1.4142135623730951}, "test.support.TestHandler.__init__": {"tf": 1.4142135623730951}, "test.support.TestHandler.shouldFlush": {"tf": 1.4142135623730951}, "test.support.TestHandler.emit": {"tf": 1.4142135623730951}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.reap_threads": {"tf": 1.4142135623730951}, "test.support.check_no_resource_warning": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.swap_item": {"tf": 3.1622776601683795}, "test.support.swap_attr": {"tf": 3.1622776601683795}, "test.support.Matcher.matches": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1.4142135623730951}, "test.support.missing_compiler_executable": {"tf": 2.449489742783178}, "test.support.fd_count": {"tf": 1}, "test.test_script_helper": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 3.872983346207417}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 3.872983346207417}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 53, "m": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 6}, "y": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "f": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.support.check__all__": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bind_port": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_fresh_module": {"tf": 2}, "test.support.CleanImport": {"tf": 1.4142135623730951}, "test.support.forget": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.6457513110645907}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1.4142135623730951}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.reap_threads": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 21}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_fresh_module": {"tf": 2}, "test.support.captured_stdin": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.temp_umask": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 27}, "n": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1.4142135623730951}, "test.support.requires_linux_version": {"tf": 1.4142135623730951}, "test.support.requires_mac_ver": {"tf": 1.4142135623730951}, "test.support.bigmemtest": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"test.support.reap_threads": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.Error": {"tf": 1}, "test.support.TestFailed": {"tf": 1}, "test.support.TestDidNotRun": {"tf": 1}, "test.support.ResourceDenied": {"tf": 1.4142135623730951}, "test.support.captured_stdin": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.bigmemtest": {"tf": 2.6457513110645907}, "test.support.anticipate_failure": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 2}, "test.support.bind_port": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.test_script_helper": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 2.8284271247461903}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 2.8284271247461903}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 28, "s": {"docs": {"test.support": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.skip_unless_symlink": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.bigaddrspacetest": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.load_package_tests": {"tf": 2}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.test_script_helper": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 16}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.run_unittest": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.test_support.TestSupport.test_temp_dir": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.temp_umask": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1.4142135623730951}, "test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.CleanImport": {"tf": 1.4142135623730951}, "test.support.captured_stdin": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 2}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.anticipate_failure": {"tf": 1.4142135623730951}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.ignore_warnings": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 4.795831523312719}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1}, "test.support.TestHandler": {"tf": 1.7320508075688772}, "test.support.TestHandler.shouldFlush": {"tf": 1.4142135623730951}, "test.support.TestHandler.emit": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1.4142135623730951}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.7320508075688772}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.support.Matcher.matches": {"tf": 1.4142135623730951}, "test.support.Matcher.match_value": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2.23606797749979}, "test.test_support.TestSupport": {"tf": 2.23606797749979}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 33, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1.4142135623730951}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.check_warnings": {"tf": 1.7320508075688772}, "test.support.check_no_warnings": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 11}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.create_empty_file": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"test.support.is_resource_enabled": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}}, "df": 3}}}}, "c": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}}, "df": 3, "s": {"docs": {"test.support.load_package_tests": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"test.support.check__all__": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.Matcher.matches": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.findfile": {"tf": 2}, "test.support.load_package_tests": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"test.support.import_module": {"tf": 1.7320508075688772}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}, "d": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 2}, "test.support.temp_umask": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}, "r": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.bind_unix_socket": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}, "y": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 3.605551275463989}, "test.support.bind_port": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"test.support.check__all__": {"tf": 2.6457513110645907}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support": {"tf": 1}, "test.support.Error": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.is_resource_enabled": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_unless_symlink": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}}, "df": 5}, "d": {"docs": {"test.support.import_module": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ResourceDenied": {"tf": 1.4142135623730951}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.is_resource_enabled": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1}}, "df": 2}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.requires": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.transient_internet": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_no_resource_warning": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.CleanImport": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 9, "s": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 2, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}, "s": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"test.support.sortdict": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.CleanImport": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 2.449489742783178}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"test.support.TestDidNotRun": {"tf": 1}, "test.support.run_unittest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.requires": {"tf": 1}, "test.support.TransientResource": {"tf": 1}}, "df": 3, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.TransientResource": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_unix_socket": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 8}, "s": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.bind_unix_socket": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.findfile": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.Error": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3, "d": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"test.support.check__all__": {"tf": 2.6457513110645907}}, "df": 1}, "z": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}, "e": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1.7320508075688772}, "test.support.import_fresh_module": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.anticipate_failure": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 2.6457513110645907}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 3.3166247903554}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 3}, "test.test_support.TestSupport": {"tf": 3}}, "df": 20, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}}, "df": 5}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.is_resource_enabled": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.reap_threads": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.sortdict": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}, "d": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler": {"tf": 1.4142135623730951}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1.4142135623730951}, "test.support.TestHandler.emit": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}, "s": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 2.23606797749979}, "test.test_support.TestSupport": {"tf": 2.23606797749979}}, "df": 7, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.swap_item": {"tf": 1.7320508075688772}, "test.support.swap_attr": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.requires_hashdigest": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 2}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.449489742783178}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.bind_unix_socket": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.Error": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.run_unittest": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.reap_threads": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.captured_stdin": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}, "r": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {"test.support.load_package_tests": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 2.23606797749979}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 8, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 3, "d": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1.7320508075688772}, "test.support.captured_stderr": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 3, "s": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.missing_compiler_executable": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.captured_stdin": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"test.support.check__all__": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": null}, "test.test_script_helper.TestScriptHelper": {"tf": null}, "test.test_support.TestSupport": {"tf": null}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"test.support.captured_stdin": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5, "d": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.fd_count": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5, "s": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}}, "df": 2}, "d": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"test.support.SuppressCrashReport": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3, "s": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.check_impl_detail": {"tf": 1.7320508075688772}, "test.support.TestHandler": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 10, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"test.support.temp_cwd": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.cpython_only": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"test.support.check__all__": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "d": {"docs": {"test.support.missing_compiler_executable": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 4, "x": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.TransientResource": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"test.support.Error": {"tf": 1}, "test.support.transient_internet": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 3, "s": {"docs": {"test.support.create_empty_file": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}, "t": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}}, "df": 6, "s": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 2}, "test.support.reap_children": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_unless_xattr": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.missing_compiler_executable": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}}, "df": 3}, "s": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 5}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7}}}}}}}}}, "d": {"docs": {"test.support.reap_children": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"test.support.TestHandler.emit": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.create_empty_file": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.forget": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_impl_detail": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 3}}, "p": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.TransientResource": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.run_doctest": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.reap_children": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__path_none": {"tf": 1}}, "df": 5, "t": {"docs": {"test.support.TestDidNotRun": {"tf": 1}, "test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1.4142135623730951}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}}, "df": 18, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 2, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_cwd__name_none": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.temp_cwd": {"tf": 1.7320508075688772}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4, "d": {"docs": {"test.support.import_fresh_module": {"tf": 2.23606797749979}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}, "s": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 2.23606797749979}, "test.support.missing_compiler_executable": {"tf": 1.7320508075688772}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"test.support.CleanImport": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.fd_count": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {"test.support.ResourceDenied": {"tf": 1.7320508075688772}, "test.support.import_module": {"tf": 1.4142135623730951}, "test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.CleanImport": {"tf": 1.4142135623730951}, "test.support.forget": {"tf": 1}, "test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.findfile": {"tf": 1.4142135623730951}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1.4142135623730951}, "test.support.transient_internet": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.7320508075688772}, "test.support.anticipate_failure": {"tf": 1.4142135623730951}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 2.449489742783178}, "test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.find_unused_port": {"tf": 3.872983346207417}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.TestHandler": {"tf": 1.4142135623730951}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1.4142135623730951}, "test.support.SuppressCrashReport": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2}, "test.test_support.TestSupport": {"tf": 2}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__forked_child": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 37, "n": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.temp_cwd": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.get_attribute": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.449489742783178}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 15, "y": {"docs": {"test.support.TestDidNotRun": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.forget": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 2.449489742783178}, "test.support.forget": {"tf": 1}, "test.support.temp_cwd": {"tf": 1.7320508075688772}, "test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.ignore_warnings": {"tf": 1}, "test.support.find_unused_port": {"tf": 3.605551275463989}, "test.support.bind_port": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}}, "df": 23}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 4}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.bigaddrspacetest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 2}, "test.support.is_resource_enabled": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 2}, "test.support.Matcher.matches": {"tf": 1.4142135623730951}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 13}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_warnings": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}, "s": {"docs": {"test.support.load_package_tests": {"tf": 1.4142135623730951}}, "df": 1}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"test.support.create_empty_file": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_default": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 2.449489742783178}, "test.support.missing_compiler_executable": {"tf": 1}}, "df": 4}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"test.support.requires_hashdigest": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"test.support.swap_attr": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.get_attribute": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5, "s": {"docs": {"test.support.TransientResource": {"tf": 1}, "test.support.skip_unless_xattr": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.get_attribute": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.check__all__": {"tf": 2}, "test.support.find_unused_port": {"tf": 2.23606797749979}, "test.support.bind_port": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 17, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1, "d": {"docs": {"test.support.is_resource_enabled": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "x": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_doctest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.cpython_only": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.TestHandler.emit": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"test.support.detect_api_mismatch": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 2.449489742783178}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.check__all__": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.check_warnings": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}}, "df": 5, "t": {"docs": {"test.support.ResourceDenied": {"tf": 1.4142135623730951}, "test.support.import_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}, "test.support.check_warnings": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "m": {"docs": {"test.support.swap_item": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"test.support.detect_api_mismatch": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"test.support.check__all__": {"tf": 2}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1.4142135623730951}, "test.support.import_module": {"tf": 1.7320508075688772}, "test.support.import_fresh_module": {"tf": 2.23606797749979}, "test.support.CleanImport": {"tf": 1}, "test.support.temp_cwd": {"tf": 2.8284271247461903}, "test.support.findfile": {"tf": 1.4142135623730951}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1.7320508075688772}, "test.support.requires_linux_version": {"tf": 1.7320508075688772}, "test.support.requires_mac_ver": {"tf": 1.4142135623730951}, "test.support.requires_hashdigest": {"tf": 1.4142135623730951}, "test.support.TransientResource": {"tf": 1.4142135623730951}, "test.support.run_doctest": {"tf": 1.7320508075688772}, "test.support.bigmemtest": {"tf": 2.449489742783178}, "test.support.get_attribute": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 3.7416573867739413}, "test.support.bind_port": {"tf": 2.23606797749979}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.TestHandler": {"tf": 1.7320508075688772}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 2}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 2}}, "df": 33, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2, "s": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 2.8284271247461903}, "test.support.CleanImport": {"tf": 1.7320508075688772}, "test.support.check__all__": {"tf": 2}}, "df": 4, "s": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.forget": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {"test.support.check_impl_detail": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.load_package_tests": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"test.support.import_module": {"tf": 1.7320508075688772}, "test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.temp_cwd": {"tf": 1.7320508075688772}, "test.support.findfile": {"tf": 1}, "test.support.create_empty_file": {"tf": 1}, "test.support.fs_is_case_insensitive": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.requires": {"tf": 1}, "test.support.requires_freebsd_version": {"tf": 1.4142135623730951}, "test.support.requires_linux_version": {"tf": 1.4142135623730951}, "test.support.requires_mac_ver": {"tf": 1.7320508075688772}, "test.support.requires_hashdigest": {"tf": 1.4142135623730951}, "test.support.TransientResource": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.get_attribute": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.TestHandler": {"tf": 1.4142135623730951}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}, "test.support.check_warnings": {"tf": 1.7320508075688772}, "test.support.check_no_warnings": {"tf": 1}, "test.support.swap_item": {"tf": 1.7320508075688772}, "test.support.swap_attr": {"tf": 1.7320508075688772}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 32, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"test.support.import_fresh_module": {"tf": 1.4142135623730951}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1.4142135623730951}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 2}, "test.support.check__all__": {"tf": 1.7320508075688772}, "test.support.find_unused_port": {"tf": 2.449489742783178}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.TestHandler": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.sortdict": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2.449489742783178}, "test.test_support.TestSupport": {"tf": 2.449489742783178}}, "df": 17, "t": {"docs": {}, "df": 0, "o": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}, "r": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.captured_stdin": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"test.support.fs_is_case_insensitive": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "g": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TestHandler.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 2}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_script_helper.TestScriptHelper.test_assert_python_not_isolated_when_env_is_required": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.reap_children": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.find_unused_port": {"tf": 2}, "test.support.TestHandler": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TransientResource": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.TestHandler": {"tf": 1}}, "df": 2}}, "o": {"docs": {"test.test_script_helper": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.import_module": {"tf": 1.4142135623730951}, "test.support.import_fresh_module": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1.4142135623730951}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.swap_item": {"tf": 1.7320508075688772}, "test.support.swap_attr": {"tf": 1.7320508075688772}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.7320508075688772}, "test.test_support.TestSupport": {"tf": 1.7320508075688772}}, "df": 13}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.CleanImport": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 2}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.swap_item": {"tf": 1.7320508075688772}, "test.support.swap_attr": {"tf": 1.7320508075688772}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 20, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_warnings": {"tf": 1.4142135623730951}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.6457513110645907}, "test.support.bind_port": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 5, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 2.23606797749979}}, "df": 3}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.check_warnings": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.captured_stdin": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.temp_cwd": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 4, "h": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.requires_hashdigest": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"test.support.anticipate_failure": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.TestHandler": {"tf": 1}, "test.support.TestHandler.__init__": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 3, "\\": {"docs": {}, "df": 0, "n": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stdin": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {"test.support.reap_children": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.test_script_helper": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 2, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "k": {"docs": {"test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"2": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.TestHandler.emit": {"tf": 1}}, "df": 2, "e": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.is_resource_enabled": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.reap_children": {"tf": 1}, "test.support.reap_threads": {"tf": 1}}, "df": 9, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.reap_threads": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 9}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.load_package_tests": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.run_doctest": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4}}}, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"7": {"4": {"0": {"6": {"2": {"1": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.ResourceDenied": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.is_resource_enabled": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.is_resource_enabled": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.run_unittest": {"tf": 1}, "test.support.check__all__": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"test.test_script_helper": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}, "x": {"docs": {"test.support.skip_unless_bind_unix_socket": {"tf": 1}, "test.support.find_unused_port": {"tf": 2}, "test.support.bind_unix_socket": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 2.23606797749979}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1.7320508075688772}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"test.support.temp_umask": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}, "test.support.reap_threads": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 6}}, "m": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.import_module": {"tf": 1.7320508075688772}, "test.support.import_fresh_module": {"tf": 3.1622776601683795}, "test.support.CleanImport": {"tf": 1.7320508075688772}, "test.support.forget": {"tf": 1.4142135623730951}, "test.support.run_doctest": {"tf": 1}, "test.support.check__all__": {"tf": 2.6457513110645907}}, "df": 6, "s": {"docs": {"test.support.import_fresh_module": {"tf": 2.23606797749979}, "test.support.forget": {"tf": 1}, "test.support.check__all__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.load_package_tests": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.TestHandler.shouldFlush": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2.23606797749979}, "test.test_script_helper.TestScriptHelperEnvironment.setUp": {"tf": 1}, "test.test_script_helper.TestScriptHelperEnvironment.tearDown": {"tf": 1}, "test.test_support.TestSupport": {"tf": 2.23606797749979}}, "df": 8, "s": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2.449489742783178}, "test.test_support.TestSupport": {"tf": 2.449489742783178}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.TransientResource": {"tf": 1}, "test.support.transient_internet": {"tf": 1}, "test.support.temp_umask": {"tf": 1}, "test.support.check_warnings": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1.4142135623730951}, "test.support.check_no_warnings": {"tf": 1.4142135623730951}, "test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 9, "s": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.transient_internet": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"test.support.bind_port": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1.4142135623730951}, "test.test_support.TestSupport": {"tf": 1.4142135623730951}}, "df": 3}}, "c": {"docs": {"test.support.requires_mac_ver": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TransientResource": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"test.support.bigmemtest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 7}, "r": {"docs": {}, "df": 0, "k": {"docs": {"test.support.anticipate_failure": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"test.support.temp_cwd": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"4": {"docs": {"test.support.requires_hashdigest": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.bind_port": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.forget": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.requires_hashdigest": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1}, "test.support.find_unused_port": {"tf": 2}, "test.support.bind_port": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1.4142135623730951}}, "df": 14, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.import_fresh_module": {"tf": 1}, "test.support.temp_cwd": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}, "test.support.sortdict": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 6}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"2": {"5": {"5": {"0": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}, "n": {"docs": {"test.support.import_module": {"tf": 1.4142135623730951}, "test.support.CleanImport": {"tf": 1}, "test.support.findfile": {"tf": 1}, "test.support.run_doctest": {"tf": 1.4142135623730951}, "test.support.cpython_only": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.check_impl_detail": {"tf": 2}, "test.support.find_unused_port": {"tf": 4.242640687119285}, "test.support.bind_port": {"tf": 2}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}, "test.support.SuppressCrashReport": {"tf": 1.4142135623730951}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"test.support.temp_cwd": {"tf": 1}, "test.support.cpython_only": {"tf": 1}, "test.support.check_impl_detail": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 4}}, "e": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1.7320508075688772}, "test.support.bind_port": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.run_doctest": {"tf": 1}, "test.support.check_warnings": {"tf": 1}}, "df": 3}}, "s": {"docs": {"test.support.bind_port": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.import_fresh_module": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.fd_count": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"test.support.requires_hashdigest": {"tf": 1.4142135623730951}, "test.support.find_unused_port": {"tf": 1.7320508075688772}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}, "test.support.check__all__": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.import_module": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.requires_hashdigest": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {"test.support.import_module": {"tf": 1}, "test.support.import_fresh_module": {"tf": 1.7320508075688772}, "test.support.CleanImport": {"tf": 1}, "test.support.captured_stdout": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}, "test.support.bigmemtest": {"tf": 1.7320508075688772}, "test.support.anticipate_failure": {"tf": 1}, "test.support.detect_api_mismatch": {"tf": 1.4142135623730951}, "test.support.check__all__": {"tf": 2.6457513110645907}, "test.support.ignore_warnings": {"tf": 1}, "test.support.find_unused_port": {"tf": 2.23606797749979}, "test.support.bind_port": {"tf": 1}, "test.support.reap_children": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.swap_item": {"tf": 2}, "test.support.swap_attr": {"tf": 2}, "test.support.SuppressCrashReport": {"tf": 1}, "test.support.missing_compiler_executable": {"tf": 1}, "test.support.fd_count": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 2.6457513110645907}, "test.test_support.TestSupport": {"tf": 2.6457513110645907}}, "df": 21}, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.support.bind_port": {"tf": 1}}, "df": 2}}, "s": {"docs": {"test.support.requires_freebsd_version": {"tf": 1}, "test.support.requires_linux_version": {"tf": 1}, "test.support.requires_mac_ver": {"tf": 2}, "test.support.load_package_tests": {"tf": 1}, "test.support.find_unused_port": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_change_cwd__chdir_warning": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"test.support.swap_item": {"tf": 1.7320508075688772}, "test.support.swap_attr": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"test.support.check_no_resource_warning": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.swap_item": {"tf": 1}, "test.support.swap_attr": {"tf": 1}}, "df": 4, "s": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.TestHandler.shouldFlush": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}}, "df": 2}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"test.support.CleanImport": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"test.support.forget": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"test.support.findfile": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"test.support.requires_freebsd_version": {"tf": 1.4142135623730951}, "test.support.requires_linux_version": {"tf": 1.4142135623730951}, "test.support.requires_mac_ver": {"tf": 1}, "test.support.bigmemtest": {"tf": 1}, "test.support.ignore_warnings": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"test.support.CleanImport": {"tf": 1}, "test.support.check__all__": {"tf": 1.4142135623730951}, "test.support.ignore_warnings": {"tf": 1}, "test.support.EnvironmentVarGuard.keys": {"tf": 1}, "test.support.sortdict": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"test.support.requires_linux_version": {"tf": 2}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.detect_api_mismatch": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.find_unused_port": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"test.support.missing_compiler_executable": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.TestHandler.matches": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.findfile": {"tf": 1}, "test.support.reap_children": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"test.support.load_package_tests": {"tf": 2}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.support.TestHandler": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.get_attribute": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.captured_stdout": {"tf": 1}, "test.support.captured_stderr": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"test.support.load_package_tests": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"test.support.run_doctest": {"tf": 1}, "test.support.find_unused_port": {"tf": 1}, "test.support.check_no_warnings": {"tf": 1}}, "df": 3}}}, "b": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}, "t": {"docs": {"test.support.ignore_warnings": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"test.support.bigmemtest": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"test.support.temp_cwd": {"tf": 1.4142135623730951}, "test.support.check_warnings": {"tf": 1.4142135623730951}, "test.test_support.TestSupport.test_temp_dir__existing_dir__quiet_true": {"tf": 1}, "test.test_support.TestSupport.test_change_cwd__non_existent_dir__quiet_true": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"test.support.is_resource_enabled": {"tf": 1}, "test.support.anticipate_failure": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1.4142135623730951}, "test.support.Matcher.matches": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.TestHandler.matches": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"test.support.check_no_warnings": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {"test.support.run_doctest": {"tf": 1}, "test.support.Matcher.match_value": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_mac_ver": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.requires_freebsd_version": {"tf": 2}, "test.support.requires_linux_version": {"tf": 2}, "test.support.requires_mac_ver": {"tf": 1.7320508075688772}, "test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"test.support.run_doctest": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"test.support.bigmemtest": {"tf": 1.4142135623730951}, "test.support.swap_item": {"tf": 1.4142135623730951}, "test.support.swap_attr": {"tf": 1.4142135623730951}, "test.support.Matcher.match_value": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"test.support.requires_hashdigest": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"test.support.Matcher.matches": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"test.support.transient_internet": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"test.support.check__all__": {"tf": 1}, "test.support.EnvironmentVarGuard": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.bind_port": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "w": {"docs": {"test.support.EnvironmentVarGuard.keys": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}, "x": {"docs": {"test.support.requires_mac_ver": {"tf": 1.7320508075688772}}, "df": 1, "x": {"docs": {}, "df": 0, "x": {"docs": {"test.support.find_unused_port": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"test.support.skip_if_buggy_ucrt_strfptime": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"test.support.reap_children": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"test.support.check_impl_detail": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"test.support.find_unused_port": {"tf": 1}, "test.support.check_no_resource_warning": {"tf": 1}, "test.support.Matcher.matches": {"tf": 1}, "test.test_script_helper.TestScriptHelper": {"tf": 1}, "test.test_support.TestSupport": {"tf": 1}}, "df": 5}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();